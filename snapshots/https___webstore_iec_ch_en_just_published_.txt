function oneTrustMatomo() {
    const mapping = {
        C0004: 'ad_storage',
        C0002: 'analytics_storage',
        C0003: 'functionality_storage',
    };
    const consentObject = {
        ad_storage: 'denied',
        analytics_storage: 'granted',
        functionality_storage: 'denied',
        security_storage: 'granted',
    };

    return {
        isOneTrust: true,
        push() {
            const activeGroups = this.getActiveGroups()
            const groups = ',' + activeGroups.toString() + ','

            const events = [
                {
                    event: "OneTrustLoaded",
                    OnetrustActiveGroups: groups
                },
                {
                    event: "OptanonLoaded",
                    OptanonActiveGroups: groups
                }
            ]

            

            this.dispatchEvents(events)

            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
        },
        pushConsentEvents(groups) {
            var _paq = window._paq = window._paq || [];
            var _mtm = window._mtm = window._mtm || [];

            
            
            
            
            
            
            
            
        },
        dispatchEvents(events) {
            var _paq = window._paq = window._paq || [];
            var _mtm = window._mtm = window._mtm || [];

            events.forEach(event => {
                _mtm.push(event)
            })
        },
        getActiveGroups() {
            let activeGroups = []
            const oneTrustConsent = decodeURIComponent(hyva.getCookie('OptanonConsent') || '');
            if (oneTrustConsent == undefined || oneTrustConsent == '') {
                return []
            }

            const splitConsent = oneTrustConsent.split('&');
            const groups = splitConsent.find(param => param.includes('groups='));
            const values = groups.split('=')[1];
            const individualValues = values.split(',');

            individualValues.forEach(value => {
                const mapValue = value.split(':')[0];
                const consentValue = value.split(':')[1];
                if (consentValue === '1') {
                    activeGroups.push(mapValue)
                }
            });

            return activeGroups
        },
        init() {
            
            setTimeout(() => {
                this.isOneTrust = (typeof OneTrust === 'undefined') ? false : true;
                if (this.isOneTrust){
                    if (hyva.getCookie('OptanonAlertBoxClosed')) {
                        this.push();
                    } else {
                        let interval = setInterval(() => {
                            if (hyva.getCookie('OptanonAlertBoxClosed')) {
                                this.push();
                                clearInterval(interval);
                            }
                        }, 1000);
                    }
                } else {
                    this.push();
                }
            }, "3000")

            window.addEventListener('consent.onetrust', (e) => {
                let OnetrustActiveGroups = window.OnetrustActiveGroups = window.OnetrustActiveGroups || [];
                let OptanonActiveGroups = window.OptanonActiveGroups = window.OptanonActiveGroups || [];

                const events = [
                    {
                        event: "OneTrustLoaded",
                        OnetrustActiveGroups: OnetrustActiveGroups
                    },
                    {
                        event: "OptanonLoaded",
                        OptanonActiveGroups: OptanonActiveGroups
                    }
                ]

                

                this.dispatchEvents(events)
            });

            window.addEventListener('OneTrustGroupsUpdated', (e) => {
                let OnetrustActiveGroups = window.OnetrustActiveGroups = window.OnetrustActiveGroups || [];
                let OptanonActiveGroups = window.OptanonActiveGroups = window.OptanonActiveGroups || [];

                const events = [
                    {
                        event: "OneTrustGroupsUpdated",
                        OptanonActiveGroups: OptanonActiveGroups
                    }
                ]

                

                this.dispatchEvents(events)
            });
        }
    }
}






























































var eventNames = [
        "wheel",
        "touchstart",
        "mouseover",
        "scroll",
        "keydown"
    ];
    function addMultiEventListener(element, eventNames, listener) {
        for (var i=0, iLen=eventNames.length; i<iLen; i++) {
            element.addEventListener(eventNames[i], listener, true);
        }
    }
    function removeMultiEventListener(element, eventNames, listener) {
        for (var i=0, iLen=eventNames.length; i<iLen; i++) {
            element.removeEventListener(eventNames[i], listener, true);
        }
    }
    var isMtmLoaded = false;
    const loadMtmScript = () => {
        if (!isMtmLoaded){
            var _mtm = window._mtm = window._mtm || [];
            var mtmData;
            _mtm.push({'mtm.startTime': (new Date().getTime()), 'event': 'mtm.Start'});
            var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
            g.async=true;
            g.onload = () => {
                
                let product = [];
                if (typeof require !== 'undefined') {
                    products = document.querySelectorAll('.products [id^="product-item"]');
                } else {
                    products = document.querySelectorAll('.product-slider a.product, .products a.product');
                }
                if (products.length) {
                    products.forEach(function(product) {
                        product.addEventListener('click', function(event, s) {
                            const regex = /_(\d+)$/;
                            let productId = '';
                            if (product.id) {
                                const matches = product.id.match(regex);
                                if (matches.length) {
                                    productId = matches[1];
                                }
                            } else {
                                if (product.parentElement) {
                                    let parentElementNode = product.parentElement.nodeName.toLowerCase();
                                    if (parentElementNode == 'form') {
                                        productId = product.parentElement.querySelector('input[name="product"]').value;
                                    }
                                }
                            }
                            if (productId) {
                                const productData = window['JAJUMA_MATOMO_PRODUCT_DATA_ID_' + productId] || {};
                                productData.item_id = productId;
                                mtmData = {
                                    'event': 'click_product',
                                    'ecommerce': {
                                        'items': [productData]
                                    }
                                }
                                _mtm.push(mtmData);
                            }
                        })
                    })
                }
                
                                    const categoryData = {"breadcrumb":["Just Published"],"category_id":"7","category_name":"Just Published","size":0,"page_path":"https:\/\/webstore.iec.ch\/en\/just-published\/","page_title":null,"page_type":"category","virtual_page":""};
                    mtmData = {
                        'event': 'view_category',
                        'ecommerce': {
                            'items': [categoryData]
                        }
                    }
                    _mtm.push(mtmData);
                  if (typeof require !== 'undefined') {
                    require(['Magento_Customer/js/customer-data'], function(customerData) {
                        let sectionData = customerData.get('cart');
                        sectionData.subscribe(function (cartValue) {
                            if (cartValue.mtmUpdateCart) {
                                mtmData = {
                                    'event': cartValue.mtmUpdateCart.event,
                                    'ecommerce': {
                                        'items': cartValue.mtmUpdateCart.item,
                                        'qty': cartValue.mtmUpdateCart.qty
                                    }
                                }
                                _mtm.push(mtmData);
                            }
                        });
                    });
                } else {
                    window.addEventListener("private-content-loaded", event => {
                        const sectionData = event.detail.data;
                        if (sectionData) {
                            const cart = sectionData.cart;
                            if (!cart.triggered) {
                                if (cart.mtmUpdateCart) {
                                    mtmData = {
                                        'event': cart.mtmUpdateCart.event,
                                        'ecommerce': {
                                            'items': cart.mtmUpdateCart.item,
                                            'qty': cart.mtmUpdateCart.qty
                                        }
                                    }
                                    _mtm.push(mtmData);
                                }
                                sectionData.cart.triggered = true;
                            }
                        }
                    });
                }

                
                  }
            g.src='https://ruby.ops.iec.ch/js/container_K5OmuT3b.js'; s.parentNode.insertBefore(g,s);
            removeMultiEventListener(window, eventNames, loadMtmScript);
        } else {
            removeMultiEventListener(window, eventNames, loadMtmScript);
        }
    }
        loadMtmScript();

var BASE_URL = 'https://webstore.iec.ch/en/';
    var THEME_PATH = 'https://webstore.iec.ch/static/version1758700288/frontend/Iec/default/en_US';
    var COOKIE_CONFIG = {
        "expires": null,
        "path": "\u002F",
        "domain": ".webstore.iec.ch",
        "secure": true,
        "lifetime": "72000",
        "cookie_restriction_enabled": false    };
    var CURRENT_STORE_CODE = 'en';
    var CURRENT_WEBSITE_ID = '3';

    window.hyva = window.hyva || {}

    window.cookie_consent_groups = window.cookie_consent_groups || {}
    window.cookie_consent_groups['necessary'] = true;

    window.cookie_consent_config = window.cookie_consent_config || {};
    window.cookie_consent_config['necessary'] = [].concat(
        window.cookie_consent_config['necessary'] || [],
        [
            'user_allowed_save_cookie',
            'form_key',
            'mage-messages',
            'private_content_version',
            'mage-cache-sessid',
            'last_visited_store',
            'section_data_ids'
        ]
    );

'use strict';
    (function( hyva, undefined ) {

        function lifetimeToExpires(options, defaults) {

            const lifetime = options.lifetime || defaults.lifetime;

            if (lifetime) {
                const date = new Date;
                date.setTime(date.getTime() + lifetime * 1000);
                return date;
            }

            return null;
        }

        function generateRandomString() {

            const allowedCharacters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
                length = 16;

            let formKey = '',
                charactersLength = allowedCharacters.length;

            for (let i = 0; i < length; i++) {
                formKey += allowedCharacters[Math.round(Math.random() * (charactersLength - 1))]
            }

            return formKey;
        }

        const sessionCookieMarker = {noLifetime: true}

        const cookieTempStorage = {};

        const internalCookie = {
            get(name) {
                const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
                return v ? v[2] : null;
            },
            set(name, value, days, skipSetDomain) {
                let expires,
                    path,
                    domain,
                    secure,
                    samesite;

                const defaultCookieConfig = {
                    expires: null,
                    path: '/',
                    domain: null,
                    secure: false,
                    lifetime: null,
                    samesite: 'lax'
                };

                const cookieConfig = window.COOKIE_CONFIG || {};

                expires = days && days !== sessionCookieMarker
                    ? lifetimeToExpires({lifetime: 24 * 60 * 60 * days, expires: null}, defaultCookieConfig)
                    : lifetimeToExpires(window.COOKIE_CONFIG, defaultCookieConfig) || defaultCookieConfig.expires;

                path = cookieConfig.path || defaultCookieConfig.path;
                domain = !skipSetDomain && (cookieConfig.domain || defaultCookieConfig.domain);
                secure = cookieConfig.secure || defaultCookieConfig.secure;
                samesite = cookieConfig.samesite || defaultCookieConfig.samesite;

                document.cookie = name + "=" + encodeURIComponent(value) +
                    (expires && days !== sessionCookieMarker ? '; expires=' + expires.toGMTString() : '') +
                    (path ? '; path=' + path : '') +
                    (domain ? '; domain=' + domain : '') +
                    (secure ? '; secure' : '') +
                    (samesite ? '; samesite=' + samesite : 'lax');
            },
            isWebsiteAllowedToSaveCookie() {
                const allowedCookies = this.get('user_allowed_save_cookie');
                if (allowedCookies) {
                    const allowedWebsites = JSON.parse(unescape(allowedCookies));

                    return allowedWebsites[CURRENT_WEBSITE_ID] === 1;
                }
                return false;
            },
            getGroupByCookieName(name) {
                const cookieConsentConfig = window.cookie_consent_config || {};
                let group = null;
                for (let prop in cookieConsentConfig) {
                    if (!cookieConsentConfig.hasOwnProperty(prop)) continue;
                    if (cookieConsentConfig[prop].includes(name)) {
                        group = prop;
                        break;
                    }
                }
                return group;
            },
            isCookieAllowed(name) {
                const cookieGroup = this.getGroupByCookieName(name);
                return cookieGroup
                    ? window.cookie_consent_groups[cookieGroup]
                    : this.isWebsiteAllowedToSaveCookie();
            },
            saveTempStorageCookies() {
                for (const [name, data] of Object.entries(cookieTempStorage)) {
                    if (this.isCookieAllowed(name)) {
                        this.set(name, data['value'], data['days'], data['skipSetDomain']);
                        delete cookieTempStorage[name];
                    }
                }
            }
        };

        hyva.getCookie = (name) => {
            const cookieConfig = window.COOKIE_CONFIG || {};

            if (cookieConfig.cookie_restriction_enabled && ! internalCookie.isCookieAllowed(name)) {
                return cookieTempStorage[name] ? cookieTempStorage[name]['value'] : null;
            }

            return internalCookie.get(name);
        }

        hyva.setCookie = (name, value, days, skipSetDomain) => {
            const cookieConfig = window.COOKIE_CONFIG || {};

            if (cookieConfig.cookie_restriction_enabled && ! internalCookie.isCookieAllowed(name)) {
                cookieTempStorage[name] = {value, days, skipSetDomain};
                return;
            }
            return internalCookie.set(name, value, days, skipSetDomain);
        }


        hyva.setSessionCookie = (name, value, skipSetDomain) => {
            return hyva.setCookie(name, value, sessionCookieMarker, skipSetDomain)
        }

        hyva.getBrowserStorage = () => {
            const browserStorage = window.localStorage || window.sessionStorage;
            if (!browserStorage) {
                console.warn('Browser Storage is unavailable');
                return false;
            }
            try {
                browserStorage.setItem('storage_test', '1');
                browserStorage.removeItem('storage_test');
            } catch (error) {
                console.warn('Browser Storage is not accessible', error);
                return false;
            }
            return browserStorage;
        }

        hyva.postForm = (postParams) => {
            const form = document.createElement("form");

            let data = postParams.data;

            if (! postParams.skipUenc && ! data.uenc) {
                data.uenc = btoa(window.location.href);
            }
            form.method = "POST";
            form.action = postParams.action;

            Object.keys(postParams.data).map(key => {
                const field = document.createElement("input");
                field.type = 'hidden'
                field.value = postParams.data[key];
                field.name = key;
                form.appendChild(field);
            });

            const form_key = document.createElement("input");
            form_key.type = 'hidden';
            form_key.value = hyva.getFormKey();
            form_key.name="form_key";
            form.appendChild(form_key);

            document.body.appendChild(form);

            form.submit();
        }

        hyva.getFormKey = function () {
            let formKey = hyva.getCookie('form_key');

            if (!formKey) {
                formKey = generateRandomString();
                hyva.setCookie('form_key', formKey);
            }

            return formKey;
        }

        hyva.formatPrice = (value, showSign, options = {}) => {
            const groupSeparator = options.groupSeparator;
            const decimalSeparator = options.decimalSeparator
            delete options.groupSeparator;
            delete options.decimalSeparator;
            const formatter = new Intl.NumberFormat(
                'en\u002DUS',
                Object.assign({
                    style: 'currency',
                    currency: 'CHF',
                    signDisplay: showSign ? 'always' : 'auto'
                }, options)
            );
            return (typeof Intl.NumberFormat.prototype.formatToParts === 'function') ?
                formatter.formatToParts(value).map(({type, value}) => {
                    switch (type) {
                        case 'currency':
                            return 'CHF' || value;
                        case 'minusSign':
                            return '- ';
                        case 'plusSign':
                            return '+ ';
                        case 'group':
                            return groupSeparator !== undefined ? groupSeparator : value;
                        case 'decimal':
                            return decimalSeparator !== undefined ? decimalSeparator : value;
                        default :
                            return value;
                    }
                }).reduce((string, part) => string + part) :
                formatter.format(value);
        }

 const formatStr = function (str, nStart) {
            const args = Array.from(arguments).slice(2);

            return str.replace(/(%+)([0-9]+)/g, (m, p, n) => {
                const idx = parseInt(n) - nStart;

                if (args[idx] === null || args[idx] === void 0) {
                    return m;
                }
                return p.length % 2
                    ? p.slice(0, -1).replace('%%', '%') + args[idx]
                    : p.replace('%%', '%') + n;
            })
        }

 hyva.str = function (string) {
            const args = Array.from(arguments);
            args.splice(1, 0, 1);

            return formatStr.apply(undefined, args);
        }

 hyva.strf = function () {
            const args = Array.from(arguments);
            args.splice(1, 0, 0);

            return formatStr.apply(undefined, args);
        }

        /**
         * Take a html string as `content` parameter and
         * extract an element from the DOM to replace in
         * the current page under the same selector,
         * defined by `targetSelector`
         */
        hyva.replaceDomElement = (targetSelector, content) => {
            
            const parser = new DOMParser();
            const doc = parser.parseFromString(content, 'text/html');
            const contentNode = doc.querySelector(targetSelector);

            
            if (!contentNode) {
                return;
            }

            hyva.activateScripts(contentNode)

            
            document.querySelector(targetSelector).replaceWith(contentNode);

            
            window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
            hyva.initMessages();
        }

        hyva.activateScripts = (contentNode) => {
            
            
            
            const tmpScripts = contentNode.getElementsByTagName('script');

            if (tmpScripts.length > 0) {
                
                
                const scripts = [];
                for (let i = 0; i < tmpScripts.length; i++) {
                    scripts.push(tmpScripts[i]);
                }

                
                for (let i = 0; i < scripts.length; i++) {
                    let script = document.createElement('script');
                    script.innerHTML = scripts[i].innerHTML;

                    document.head.appendChild(script);

                    
                    scripts[i].parentNode.removeChild(scripts[i]);
                }
            }
            return contentNode;
        }

 const replace = {['+']: '-', ['/']: '_', ['=']: ','};
        hyva.getUenc = () => btoa(window.location.href).replace(/[+/=]/g, match => replace[match]);

        let currentTrap;

        const focusableElements = (rootElement) => {
            const selector = 'button, [href], input, select, textarea, details, [tabindex]:not([tabindex="-1"]';
            return Array.from(rootElement.querySelectorAll(selector))
                .filter(el => {
                    return el.style.display !== 'none'
                        && !el.disabled
                        && el.tabIndex !== -1
                        && (el.offsetWidth || el.offsetHeight || el.getClientRects().length)
                })
        }

        const focusTrap = (e) => {
            const isTabPressed = e.key === 'Tab' || e.keyCode === 9;
            if (!isTabPressed) return;

            const focusable = focusableElements(currentTrap)
            const firstFocusableElement = focusable[0]
            const lastFocusableElement = focusable[focusable.length - 1]

            e.shiftKey
                ? document.activeElement === firstFocusableElement && (lastFocusableElement.focus(), e.preventDefault())
                : document.activeElement === lastFocusableElement && (firstFocusableElement.focus(), e.preventDefault())
        };

        hyva.releaseFocus = (rootElement) => {
            if (currentTrap && (!rootElement || rootElement === currentTrap)) {
                currentTrap.removeEventListener('keydown', focusTrap)
                currentTrap = null
            }
        }
        hyva.trapFocus = (rootElement) => {
            if (!rootElement) return;
            hyva.releaseFocus()
            currentTrap = rootElement
            rootElement.addEventListener('keydown', focusTrap)
            const firstElement = focusableElements(rootElement)[0]
            firstElement && firstElement.focus()
        }

                hyva.alpineInitialized = (fn) => window.addEventListener('alpine:initialized', fn, {once: true})
         window.addEventListener('user-allowed-save-cookie', () => internalCookie.saveTempStorageCookies())

    }( window.hyva = window.hyva || {} ));

(() => {
        const origFormatPrice = hyva.formatPrice;
        hyva.formatPrice = function (value, showSign) {
            let price = origFormatPrice.call(null, value, showSign)
            if (true) {
                price = price.replace('.00', '.-').replace(',', "'")
            }
            return price
        }
    })()

if (!window.IntersectionObserver) {
        window.IntersectionObserver = function (callback) {
            this.observe = el => el && callback(this.takeRecords());
            this.takeRecords = () => [{isIntersecting: true, intersectionRatio: 1}];
            this.disconnect = () => {};
            this.unobserve = () => {};
        }
    }






JavaScript seems to be disabled in your browser.

For the best experience on our site, be sure to turn on Javascript in your browser.





document.body.addEventListener('touchstart', () => {}, {passive: true})

Skip to content

function initHeader () {
        return {
            searchOpen: false,
            cart: {},
            isCartOpen: false,
            getData(data) {
                if (data.cart) { this.cart = data.cart }
            },
            isCartEmpty() {
                return !this.cart.summary_count
            },
            toggleCart(event) {
                if (event.detail && event.detail.isOpen !== undefined) {
                    this.isCartOpen = event.detail.isOpen
                    if (!this.isCartOpen && this.$refs && this.$refs.cartButton) {
                        this.$refs.cartButton.focus()
                    }
                } else {
                                        this.isCartOpen = true
                }
            }
        }
    }
    function initCompareHeader() {
        return {
            compareProducts: null,
            itemCount: 0,
            receiveCompareData(data) {
                if (data['compare-products']) {
                    this.compareProducts = data['compare-products'];
                    this.itemCount = this.compareProducts.count;
                }
            }
        }
    }







International
Electrotechnical
Commission













Log in



Log in

Create an account













Cart







Help


















Products
















Products






Value-added products

















Value-added products





Consolidated version (CSV)





Redline version (RLV)





Commented version (CMV)





Extended version (EXV)





Pre-release version (PRV)





Pack versions (PAC)





Test report form (TRF)









Products by technical area

















Products by technical area





Company organization





Electrical





Electronics





Energy





Health





Information technology





Manufacturing





Others





Telecommunications





Terminology and metrology





Testing





Transportation









All products














Just Published
















Just Published






Past month







Past 2 weeks







Past week







Past day














Bestsellers













'use strict';

    const initMenuMobile_68e221e0421a1 = () => {
        return {
            mobilePanelActiveId: null,
            subMobilePanelActiveId: null,
            open: false,
            setActiveMenu(menuNode) {
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.classList.add('active');
                    item.closest('li.level-0') &&
                    item.closest('li.level-0').querySelector('a.level-0').classList.add('active');
                });
            },
            openMenu() {
                this.open = true
                this.$nextTick(() => hyva.trapFocus(this.$refs['mobileMenuNavLinks']));
                // Prevent from body scrolling while mobile menu opened
                document.body.style.position = 'fixed';
            },
            closeMenu() {
                document.body.style.position = '';

                if (this.open) {
                    this.$nextTick(() => this.$refs['mobileMenuTrigger'].focus() || hyva.releaseFocus());
                }

                this.open = false
                this.mobilePanelActiveId = null
                this.subMobilePanelActiveId = null
            },
            openSubcategory(index) {
                const menuNodeRef = document.querySelector('[data-child-id=' + index + ']')
                this.mobilePanelActiveId = this.mobilePanelActiveId === index ? 0 : index

                this.$nextTick(() => hyva.trapFocus(menuNodeRef))
            },
            openThirdLevelMenu(index) {
                const menuNodeRef = document.querySelector('[data-child-id=' + index + ']')
                this.subMobilePanelActiveId = this.subMobilePanelActiveId === index ? 0 : index

                this.$nextTick(() => hyva.trapFocus(menuNodeRef))
            },
            backToMainCategories(index, midLevel = false) {
                const menuNodeRef = document.querySelector('[data-child-id=' + index + ']')
                midLevel ? this.subMobilePanelActiveId = 0 : this.mobilePanelActiveId = 0
                this.$nextTick(() => {
                    hyva.trapFocus(this.$refs['mobileMenuNavLinks'])
                    menuNodeRef.querySelector('a').focus()
                })
            },
        }
    }







function initCartDrawer() {
        return {
            open: false,
            isLoading: false,
            cart: {},
            maxItemsToDisplay: 10,
            itemsCount: 0,
            totalCartAmount: 0,
            getData(data) {
                if (data.cart) {
                    this.cart = data.cart;
                    this.itemsCount = data.cart.items && data.cart.items.length || 0;
                    this.totalCartAmount = this.cart.summary_count;
                    this.setCartItems();
                }
                this.isLoading = false;
            },
            cartItems: [],
            getItemCountTitle() {
                return hyva.strf('\u00250\u0020of\u0020\u00251\u0020products\u0020in\u0020cart\u0020displayed', this.maxItemsToDisplay, this.totalCartAmount)
            },
            setCartItems() {
                this.cartItems = this.cart.items && this.cart.items.sort((a, b) => b.item_id - a.item_id) || [];

                if (this.maxItemsToDisplay > 0) {
                    this.cartItems = this.cartItems.slice(0, parseInt(this.maxItemsToDisplay, 10));
                }
            },
            deleteItemFromCart(itemId) {
                this.isLoading = true;

                const formKey = hyva.getFormKey();
                const postUrl = BASE_URL + 'checkout/sidebar/removeItem/';

                fetch(postUrl, {
                    "headers": {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    },
                    "body": "form_key=" + formKey + "&item_id=" + itemId,
                    "method": "POST",
                    "mode": "cors",
                    "credentials": "include"
                }).then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else if (response.ok) {
                        return response.json();
                    } else {
                        window.dispatchMessages && window.dispatchMessages([{
                            type: 'warning',
                            text: 'Could\u0020not\u0020remove\u0020item\u0020from\u0020quote.'
                        }]);
                        this.isLoading = false;
                    }
                }).then(result => {
                    window.dispatchMessages && window.dispatchMessages([{
                        type: result.success ? 'success' : 'error',
                        text: result.success
                            ? 'You\u0020removed\u0020the\u0020item.'
                            : result.error_message
                    }], result.success ? 5000 : 0)
                    window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                });
            },
            toggleCartDrawer(event) {
                if (event.detail && event.detail.isOpen !== undefined) {
                    if (event.detail.isOpen) {
                        this.openCartDrawer()
                    } else {
                        this.open = false
                        this.$refs && this.$refs.cartDialogContent && hyva.releaseFocus(this.$refs.cartDialogContent)
                    }
                } else {
                                        this.openCartDrawer()
                }
            },
            openCartDrawer() {
                this.open = true;
                this.$nextTick(() => {
                    this.$refs && this.$refs.cartDialogContent && hyva.trapFocus(this.$refs.cartDialogContent)
                })
            },
            closeCartDrawer() {
                this.$dispatch('toggle-cart', { isOpen: false })
            }
        }
    }







My cart










Cart is empty



























Price














Subtotal:









Proceed to checkout

View or edit cart









@keyframes spinner-ball-triangle1 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(38%, -79%); }
            66% { transform: translate(77%, 0%); }
            100% { transform: translate(0%, 0%); }
        }

        @keyframes spinner-ball-triangle2 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(38%, 79%); }
            66% { transform: translate(-38%, 79%); }
            100% { transform: translate(0%, 0%); }
        }

        @keyframes spinner-ball-triangle3 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(-77%, 0%); }
            66% { transform: translate(-38%, -79%); }
            100% { transform: translate(0%, 0%); }
        }




loader

Loading...





function initAuthentication() {
        return {
            open: false,
            forceAuthentication: false,
            checkoutUrl: 'https://webstore.iec.ch/en/checkout/index/',
            errors: 0,
            hasCaptchaToken: 0,
            displayErrorMessage: false,
            errorMessages: [],
            setErrorMessages: function setErrorMessages(messages) {
                this.errorMessages = [messages];
                this.displayErrorMessage = this.errorMessages.length;
            },
            submitForm: function () {
                // Do not rename $form, the variable is expected to be declared in the recaptcha output
                const $form = document.querySelector('#login-form');
                
                if (this.errors === 0) {
                    this.dispatchLoginRequest($form);
                }
            },
            onPrivateContentLoaded: function (data) {
                const isLoggedIn = data.customer && data.customer.firstname;
                if (data.cart && !isLoggedIn) {
                    this.forceAuthentication = !data.cart.isGuestCheckoutAllowed;
                }
            },
            redirectIfAuthenticated: function (event) {
                if (event.detail && event.detail.url) {
                    this.checkoutUrl = event.detail.url;
                }
                if (!this.forceAuthentication) {
                    window.location.href = this.checkoutUrl;
                }
            },
            dispatchLoginRequest: function(form) {
                this.isLoading = true;
                const username = this.$refs['customer-email'].value;
                const password = this.$refs['customer-password'].value;
                const formKey = hyva.getFormKey();
                const bodyFields = {
                    'username': username,
                    'password': password,
                    'formKey': formKey
                };
                                const fieldName = 'g\u002Drecaptcha\u002Dresponse';
                const recaptchaField = fieldName && form[fieldName];
                if (recaptchaField) {
                    bodyFields[fieldName] = recaptchaField.value;
                }
                fetch('https://webstore.iec.ch/en/customer/ajax/login/', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify(bodyFields)
                    }
                ).then(response => {
                        return response.json()
                    }
                ).then(data=> {
                    this.isLoading = false;
                    if (data.errors) {
                        dispatchMessages([{
                            type: 'error',
                            text: data.message
                        }], 5000);
                        this.errors = 1;
                        this.hasCaptchaToken = 0;

                        // Override @WIDE error message are display on main page hidden by popup so close them to see errors
                        this.open = false;
                        this.$dispatch('toggle-cart', { isOpen: false })
                        window.scroll({top: 0, left: 0, behavior: 'smooth'});
                        // / Override @WIDE
                    } else {
                        window.location.href = this.checkoutUrl;
                    }
                });
            }
        }
    }









x





Checkout using your account


If you have a Webstore account but are using this version for the first time, please use
Forgot password
to choose a new password.





Email address








Password








Log in

Forgot your password?










New customers



Your IEC benefits:






check
Favorites list




check
Easy access to purchased standards and related invoice




check
Track status of your standards library


Create an account



















Products













Value-added products








Products by technical area








All products

























See all









See all








Just Published










Past month





Past 2 weeks





Past week





Past day

























See all









See all








Bestsellers








'use strict';

    const initMenuDesktop_68e21c97288b8 = () => {
        return {
            hoverPanelActiveId: null,
            activeSubmenu: null,
            activeSubmenuName: null,
            submenuItems: [],
            categoryData: {
                'description': null,
                'url': null,
                'name': null,
                'vap_code': ''
            },
            setActiveMenu(menuNode) {
                this.activeSubmenu = null;
                this.submenuItems = [];
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.classList.add('active');
                    item.closest('div.level-0') &&
                    item.closest('div.level-0').querySelector('a.level-0').classList.add('active');
                });
            },
            openMenuOnClick(menuNode) {
                if (menuNode === this.hoverPanelActiveId) {
                    this.hoverPanelActiveId = 0;
                } else {
                    this.hoverPanelActiveId = menuNode
                }
            },
            openSubMenuOnClick(menuNode) {
                let decodedMenuNode = JSON.parse(menuNode)
                this.activeSubmenu = decodedMenuNode
                this.activeSubmenuName = decodedMenuNode['name']
                this.submenuItems = decodedMenuNode['childData']
                this.setCategoryData(Object.values(this.submenuItems)[0])
            },
            setCategoryData(childData) {
                if (childData !== null) {
                    this.categoryData.description = childData['description']
                    this.categoryData.name = childData['name']
                    this.categoryData.url = childData['url']
                    this.categoryData.vap_code = childData['vap_code'] ?? ''
                } else {
                    this.categoryData = {
                        'description': null,
                        'url': null,
                        'name': null,
                        'vap_code': ''
                    };
                }
            },
            resetSubMenus() {
                this.activeSubmenu = null;
                this.submenuItems = [];
                this.categoryData = {
                    'description': null,
                    'url': null,
                    'name': null,
                    'vap_code': ''
                };
            },
            toggleNav (i, children = false, e) {
                this.resetSubMenus()
                setTimeout(() => {
                    this.hoverPanelActiveId = i
                    if (children) {
                        this.setOverlayDisplay(i ? 'block' : 'none')
                    }
                }, e ? 10 : 0)
            },
            backSubMenu(i) {
                this.toggleNav(i, true, true)
            },
            setOverlayDisplay(display) {
                document.querySelector('.page-overlay').style.display = display;
            }
        }
    }



Search


Suggestions


Search

function initMiniSearch() {
        return {
            minSearchLength: 3,
            suggestions: [],
            validOnly: true,
            showTrf: false,

            suggest() {
                let search = this.$refs.searchInput;
                if (search.value.length >= this.minSearchLength) {
                    search.setCustomValidity('');
                    search.reportValidity();
                    this.fetchSuggestions(search.value);
                } else {
                    this.suggestions = [];
                }
            },

            filterUpdated(event) {
                if (event.detail) {
                    this.validOnly = event.detail.validOnly;
                    this.showTrf = event.detail.showTrf;
                }
            },

            fetchSuggestions(term) {
                let params = new URLSearchParams({
                    query: term,
                    mode: 'PUBLICATION',
                    language: '',
                    validOnly: this.validOnly,
                    showTrf: this.showTrf,
                });
                fetch('https://webstore-search-api.iec.ch/api/publications/autocomplete?' + params)
                    .then(response => response.json())
                    .then(result => this.suggestions = result);
            },
            search(term) {
                let search = this.$refs.searchInput;
                term = term || search.value;
                if (term.length < this.minSearchLength) {
                    search.setCustomValidity('Minimum\u0020search\u0020query\u0020length\u0020is\u00203');
                    search.reportValidity();
                } else {
                    search.setCustomValidity('');
                    search.value = term;
                                        this.$refs.form.submit();
                     }

                this.suggestions = [];
            },
            closeSuggest() {
                this.suggestions = [];
            },
            focusElement(el) {
                if (el && el.tagName === 'BUTTON') {
                    el.focus()
                } else {
                    el?.querySelector('button')?.focus()
                }

            }
        }
    }








Home








Just Published





function initMessages() {
        "use strict";
        return {
            messages: window.mageMessages || [],
            isEmpty() {
                return this.messages.reduce(
                    function (isEmpty, message) {
                        return isEmpty && message === undefined
                    }, true
                )
            },
            removeMessage(messageIndex) {
                this.messages[messageIndex] = undefined;
            },
            addMessages(messages, hideAfter) {
                messages.map((message) => {
                    this.messages = this.messages.concat(message);
                    if (hideAfter === undefined && message.type === 'success' && window.defaultSuccessMessageTimeout) {
                        hideAfter = window.defaultSuccessMessageTimeout;
                    }
                    if (hideAfter) {
                        this.setHideTimeOut(this.messages.length -1, hideAfter);
                    }
                });
            },
            setHideTimeOut(messageIndex, hideAfter) {
                setTimeout((messageIndex) => {
                    this.removeMessage(messageIndex);
                }, hideAfter, messageIndex);
            },
            eventListeners: {
                ['@messages-loaded.window'](event) {
                    this.addMessages(event.detail.messages, event.detail.hideAfter)
                },
                ['@private-content-loaded.window'](event) {
                    const data = event.detail.data;
                    if (
                        data.messages &&
                        data.messages.messages &&
                        data.messages.messages.length
                    ) {
                        this.addMessages(data.messages.messages);
                    }
                },
                ['@clear-messages.window']() {
                    this.messages = [];
                }
            }
        }
    }


























@keyframes spinner-ball-triangle1 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(38%, -79%); }
            66% { transform: translate(77%, 0%); }
            100% { transform: translate(0%, 0%); }
        }

        @keyframes spinner-ball-triangle2 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(38%, 79%); }
            66% { transform: translate(-38%, 79%); }
            100% { transform: translate(0%, 0%); }
        }

        @keyframes spinner-ball-triangle3 {
            0% { transform: translate(0%, 0%); }
            33% { transform: translate(-77%, 0%); }
            66% { transform: translate(-38%, -79%); }
            100% { transform: translate(0%, 0%); }
        }




loader

Loading...


Just Published

Product
products

Valid publications only





Filters


Clear filters

Valid publications only
Show Test report forms
Publication date
























Show Test report forms
No filters available
class TreeNode {
        constructor(key, value = key, parent = null) {
            this.key = key;
            this.value = value;
            this.parent = parent;
            this.children = [];
        }

        get isLeaf() {
            return this.children.length === 0;
        }

        get hasChildren() {
            return !this.isLeaf;
        }
    }

    class Tree {
        constructor(key, value = key) {
            this.root = new TreeNode(key, value);
        }

        * preOrderTraversal(node = this.root) {
            yield node;
            if (node.children.length) {
                for (let child of node.children) {
                    yield* this.preOrderTraversal(child);
                }
            }
        }

        * postOrderTraversal(node = this.root) {
            if (node.children.length) {
                for (let child of node.children) {
                    yield* this.postOrderTraversal(child);
                }
            }
            yield node;
        }

        insert(parentNodeKey, key, value = key) {
            for (let node of this.preOrderTraversal()) {
                if (node.key === parentNodeKey) {
                    node.children.push(new TreeNode(key, value, node));
                    return true;
                }
            }
            return false;
        }

        remove(key) {
            for (let node of this.preOrderTraversal()) {
                const filtered = node.children.filter(c => c.key !== key);
                if (filtered.length !== node.children.length) {
                    node.children = filtered;
                    return true;
                }
            }
            return false;
        }

        find(key) {
            for (let node of this.preOrderTraversal()) {
                if (node.key === key) return node;
            }
            return undefined;
        }
    }

    function filterFacet() {
        return {
            name: null,
            tree: null,
            open: true,

            init() {
                this.name = this.filter.name;
                if (this.filterTrees[this.name] === undefined) {
                    this.initTree();
                }
            },

            initTree() {
                this.tree = new Tree(this.name, this.name);
                this.buildTree(this.name, this.filters[this.name].buckets, this.name, 1);
                this.filterTrees[this.name] = this.tree;
            },

            updateTree(event) {
                let filterName = event.detail.name;
                if (this.name === filterName) {
                    this.initTree();
                }
            },

            buildTree(parentKey, data, facet, level) {
                let nextLevel = level + 1;
                for (let item of data) {
                    let value = false;
                    let itemKey = 'level_' + level + '_' + item.key;
                    if (this.facets[facet]
                        && this.facets[facet][level]
                        && this.facets[facet][level].includes(item.key)
                    ) {
                        value = true;
                    }

                    if (this.tree.find(parentKey).value === true) {
                        value = true;
                    }

                    this.tree.insert(parentKey, itemKey, value);

                    if (item.nested && item.nested.buckets && item.nested.buckets.length > 0) {
                        this.buildTree(itemKey, item.nested.buckets, facet, nextLevel);
                    }
                }
            },

            applyFilter(event) {
                let target = event.target;

                let key = target.dataset.key;
                let level = parseInt(target.dataset.level);

                let node = this.tree.find('level_' + level + '_' + key);
                if (node) {
                    node.value = target.checked;
                    this.changeChildrenValues(node, target.checked);

                    if (level === 3) {
                        if (node.parent.parent.value === true) {
                            if (node.parent.value === true) {
                                node.parent.value = target.checked;
                                node.parent.parent.value = target.checked;
                                this.changeChildrenValues(node.parent, target.checked);
                            }
                        } else {
                            if (node.parent.value === true) {
                                node.parent.value = target.checked;
                            }
                        }
                    }

                    if (level === 2) {
                        node.parent.value = this.hasAllChildrenSelected(node.parent);
                    }

                    this.applyFacets();
                }
            },

            changeChildrenValues(node, value) {
                for (let child of this.tree.preOrderTraversal(node)) {
                    child.value = value;
                }
            },

            hasChildrenSelected(node, ignore) {
                if (node) {
                    for (let child of this.tree.preOrderTraversal(node)) {
                        if (child.value === true) {
                            if (ignore) {
                                if (child.key !== ignore) {
                                    return true;
                                }
                            } else {
                                return true;
                            }
                        }
                    }
                }

                return false;
            },

            hasAllChildrenSelected(node) {
                if (node) {
                    for (let child of node.children) {
                        if (child.value === false) {
                            return false;
                        }
                    }

                    return true;
                }

                return false;
            },

            isChecked(key, level) {
                if (this.tree) {
                    let node = this.tree.find('level_' + level + '_' + key);
                    return node && node.value === true;
                }

                return false;
            },

            isDashed(key, level) {
                if (this.tree) {
                    let node = this.tree.find('level_' + level + '_' + key);
                    return node && node.value === false && this.hasChildrenSelected(node) === true
                }

                return false;
            },

            getChildLength(filterName, item) {
                let length = 0;
                if (item.nested) {
                    length = this.sortFilterData(filterName, item.key, item.nested.buckets).length;
                }

                if (length === undefined) {
                    length = 0;
                }

                return length;
            }
        }
    }

Validate
No data

Remove all filters



Discover
Show all publications


Show less





Discover











function pagination() {
        return {
            previousPage() {
                if (this.currentPage > 1) {
                    this.prevPage = this.currentPage;
                    this.currentPage--;
                    this.callApi();

                    window.scrollTo({top: 0, behavior: 'smooth'});
                }
            },

            goToPage(page) {
                this.prevPage = this.currentPage;

                if (page <= 1) {
                    this.currentPage = 1;
                } else if (page >= this.totalPages) {
                    this.currentPage = this.totalPages;
                } else {
                    this.currentPage = page;
                }

                this.callApi();

                window.scrollTo({top: 0, behavior: 'smooth'});
            },

            nextPage() {
                if (this.currentPage < this.totalPages) {
                    this.prevPage = this.currentPage;
                    this.currentPage++;
                    this.callApi();

                    window.scrollTo({top: 0, behavior: 'smooth'});
                }
            },

            changePerPage(value) {
                this.perPage = parseInt(value)

                this.callApi();

                window.scrollTo({top: 0, behavior: 'smooth'});
            },
        }
    }

window.nameMapping = {"ics":{"ics":"ICS"},"header":{"header":"Header"},"committee":{"committee":"Technical committee"},"publication_type":{"publication_type":"Publication type"},"type":{"type":"Type","IS":"International Standard","TR":"Technical Report","TS":"Technical Specification","GUIDE":"Guide","TRF":"Test Report Form","PAS":"Publicly Available Specification","SRD":"Systems Reference Deliverable","WP":"White Paper","TEC":"Technology Report","STTR":"Societal and Technology Trend Report","TMOP":"Technology and Market Outlook Paper","OTHER":"Other"},"vap_type":{"vap_type":"VAP","CONSOLIDATED":"Consolidated version","REDLINE":"Redline version","COMMENTED":"Commented version","EXTENDED":"Extended version","PRERELEASE":"Pre-release version","TRF":"Test report form","PACK":"Pack","SERIES":"Series version"},"status":{"status":"Status","PUBLISHED":"Valid","REVISED":"Revised","REPLACED":"Replaced","WITHDRAWN":"Withdrawn"},"available_formats":{"status":"Available formats"}};
    window.publicationTypeMapping = {"STANDARD":"","PUBLICATION":"","CORRIGENDUM":"","INTERPRETATION_SHEET":"","CONSOLIDATED":"csv","REDLINE":"rlv","COMMENTED":"cmv","PRERELEASE":"prv","EXTENDED":"exv","SERIES":"ser","PACK":"pac"};
    window.vapTypeLabels = {"CONSOLIDATED":"Consolidated version","REDLINE":"Redline version","COMMENTED":"Commented version","PRERELEASE":"Pre-release version","EXTENDED":"Extended version","TRF":"Test report form","PACK":"Pack","SERIES":"Series version"};
    window.statusLabels = {"PUBLISHED":"Valid","REVISED":"Revised","REPLACED":"Replaced","WITHDRAWN":"Withdrawn"};
    window.vapDotClassMapping = {"csv":"consolidated","rlv":"redline","cmv":"commented","exv":"extended","prv":"pre-release","trf":"test-report","ser":"pack","pac":"series"};
    window.statusDotClassMapping = {"PUBLISHED":"-valid","REVISED":"-withdraw","REPLACED":"-withdraw","WITHDRAWN":"-withdraw"};

    function categoryTags() {
        return {
            tags: [{"name":"Root Catalog","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/catalog\/category\/view\/s\/root-catalog\/id\/1\/"},{"name":"Default Category","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/catalog\/category\/view\/s\/default-category\/id\/2\/"},{"name":"Content System","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/catalog\/category\/view\/s\/content-system\/id\/4\/"},{"name":"Sample Category","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/catalog\/category\/view\/s\/sample-category\/id\/5\/"},{"name":"Products","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/"},{"name":"Just Published","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/just-published\/"},{"name":"Bestsellers","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/bestsellers\/"},{"name":"Value-added products","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/"},{"name":"Consolidated version (CSV)","ics":[],"vap":["csv"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/consolidated-versions\/"},{"name":"Redline version (RLV)","ics":[],"vap":["rlv"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/redline-versions\/"},{"name":"Commented version (CMV)","ics":[],"vap":["cmv"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/commected-versions\/"},{"name":"Extended version (EXV)","ics":[],"vap":["exv"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/extended-versions\/"},{"name":"Pre-release version (PRV)","ics":[],"vap":["prv"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/pre-release-versions\/"},{"name":"Test report form (TRF)","ics":[],"vap":["trf"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/test-report-forms\/"},{"name":"Products by technical area","ics":["1.11"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/"},{"name":"Company organization","ics":["03"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/company-organization\/"},{"name":"Electrical","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/electrical\/"},{"name":"Electrical engineering","ics":["29","55.060","71"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/electrical\/electrical-engineering\/"},{"name":"Electrical installations of buildings","ics":["91"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/electrical\/electrical-installations-of-buildings\/"},{"name":"Household appliances","ics":["97","23.080","23.120","65"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/electrical\/household-appliances\/"},{"name":"Electronics","ics":["31"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/electronics\/"},{"name":"Energy","ics":["27"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/energy\/"},{"name":"Health","ics":["11","13"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/health\/"},{"name":"Information technology","ics":["35"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/information-technology\/"},{"name":"IT equipment","ics":["35.110","35.140","35.160","35.180","35.200","35.220","35.260"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/information-technology\/it-equipment\/"},{"name":"IT security","ics":["35.030"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/information-technology\/it-security\/"},{"name":"IT systems","ics":["35.020","35.040","35.060","35.080","35.100","35.210","35.240"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/information-technology\/it-systems\/"},{"name":"Manufacturing","ics":["25","07.120"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/manufacturing\/"},{"name":"Others","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/"},{"name":"Clothing industry","ics":["61"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/clothing-industry\/"},{"name":"Food","ics":["67"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/food\/"},{"name":"Fluid systems","ics":["23.040","23.060","23.100","23.140"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/fluid-systems\/"},{"name":"Jewellery","ics":["39"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/jewellery\/"},{"name":"Materials handling equipment","ics":["53"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/materials-handling-equipment\/"},{"name":"Metallurgy","ics":["77"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/metallurgy\/"},{"name":"Military engineering","ics":["95"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/military-engineering\/"},{"name":"Packaging","ics":["55.020","55.080","55.180","55.230"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/packaging\/"},{"name":"Paint and colour industries","ics":["87"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/paint-and-colour-industries\/"},{"name":"Paper","ics":["85"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/paper\/"},{"name":"Petroleum","ics":["75"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/petroleum\/"},{"name":"Textile","ics":["59"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/others\/textile\/"},{"name":"Telecommunications","ics":["33","37"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/telecommunications\/"},{"name":"Terminology and metrology","ics":["01","17","07.020","07.030"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/terminology-and-metrology\/"},{"name":"Testing","ics":["19","21"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/testing\/"},{"name":"Transportation","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/"},{"name":"Aircraft","ics":["49"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/aircraft\/"},{"name":"Civil engineering","ics":["93"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/civil-engineering\/"},{"name":"Railway","ics":["45"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/railway\/"},{"name":"Road","ics":["43"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/road\/"},{"name":"Ships","ics":["47"],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/products\/products-by-technical-area\/transportation\/ships\/"},{"name":"Past month","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/just-published\/past-month\/"},{"name":"Past 2 weeks","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/just-published\/past-2-weeks\/"},{"name":"Past week","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/just-published\/past-week\/"},{"name":"Past day","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/just-published\/past-day\/"},{"name":"Masterclass","ics":[],"vap":[],"url":"https:\/\/webstore.iec.ch\/en\/masterclass\/"},{"name":"Pack versions (PAC)","ics":[],"vap":["pac"],"url":"https:\/\/webstore.iec.ch\/en\/products\/value-added-products\/pack-versions\/"}],

            getTags(item) {
                let tags = [];
                for (let ics of item._source.ics) {
                    for (let i = 3; i >= 1; i--) {
                        let icsCode = ics['level_' + i];
                        if (icsCode) {
                            let tag = this.getIcsTag(icsCode);
                            if (tag !== undefined) {
                                tag.class = 'technical-area -blueLight';
                                if (!tags.includes(tag)) {
                                    tags.push(tag);

                                    
                                    break;
                                }
                            }
                        }
                    }
                }

                let pubType = item._source.publication_type;
                let reference = item._source.reference;

                let vapCode = '';
                if (pubType === 'PUBLICATION' && reference.includes('TRF')) {
                    vapCode = 'trf';
                } else {
                    vapCode = window.publicationTypeMapping[pubType] ?? '';
                }

                if (vapCode !== '') {
                    let tag = this.tags.find(tag => tag.vap.includes(vapCode));
                    if (tag !== undefined && window.vapDotClassMapping[vapCode]) {
                        tag.class = window.vapDotClassMapping[vapCode];
                        tags.push(tag);
                    }
                }

                return tags;
            },

            getIcsTag(icsCode) {
                return this.tags.find(tag => tag.ics.includes(icsCode));
            }
        }
    }

    function searchPage() {
        return {
            pageTitle: "Search results for: <strong class='block md:inline mt-4 text-3xl text-primary'>“TEXT_QUERY”</strong>",
            documentTitle: "Search results for: 'TEXT_QUERY'",
            apiUrl: "https://webstore-search-api.iec.ch/api/search",
            isLoading: true,
            hasFilters: false,
            displayMode: 'list',
            dateFilter: {
                min: 0,
                max: 0
            },
            dateMin: null,
            dateMax: null,
            filters: [],
            paginationFrom: 0,
            prevPage: 1,
            currentPage: 1,
            totalPages: 1,
            pagesLimit: 1000,
            maxPages: 5,
            perPage: 10,
            perPageValues: ["10","25","50","100"],
            language: "en",
            mode: "FULL",
            query: "",
            validOnlyAvailable: true,
            validOnly: true,
            searchInFilters: false,
            showRelatedPubs: true,
            trfAvailable: true,
            showTrf: false,
            totalItems: 0,
            facets: {},
            items: [],
            filtersSortOrder: {"header":{"CISPR":1,"IEC":2,"IEC\/ASTM":3,"IEC\/IEEE":4,"IEC\/ISO":5,"IEC\/ISO\/IEEE":6,"ISO\/IEC":7,"ISO\/IEC\/IEEE":8,"ISO":9,"IECEE":10,"IECEx":11,"IECQ":12,"IECRE":13},"type":{"IS":10,"TR":20,"TS":30,"PAS":40,"SRD":50,"GUIDE":60,"TRF":70,"TMOP":80,"TEC":90,"STTR":100,"WP":110,"MISC":100000},"vap_type":{"CONSOLIDATED":1,"REDLINE":2,"COMMENTED":3,"EXTENDED":4,"PRERELEASE":5,"TRF":6,"PACK":7,"SERIES":8},"committee":{"TC 1":1,"TC 2":2,"TC 3":3,"TC 3\/SC 3C":4,"TC 3\/SC 3D":5,"TC 4":6,"TC 5":7,"TC 7":8,"TC 8":9,"TC 8\/SC 8A":10,"TC 8\/SC 8B":11,"TC 9":12,"TC 10":13,"TC 11":14,"TC 13":15,"TC 14":16,"TC 15":17,"TC 15\/SC 15A":18,"TC 17":19,"TC 17\/SC 17A":20,"TC 17\/SC 17C":21,"TC 18":22,"TC 18\/SC 18A":23,"TC 20":24,"TC 21":25,"TC 21\/SC 21A":26,"TC 22":27,"TC 22\/SC 22D":28,"TC 22\/SC 22E":29,"TC 22\/SC 22F":30,"TC 22\/SC 22G":31,"TC 22\/SC 22H":32,"TC 23":33,"TC 23\/SC 23A":34,"TC 23\/SC 23B":35,"TC 23\/SC 23E":36,"TC 23\/SC 23G":37,"TC 23\/SC 23H":38,"TC 23\/SC 23J":39,"TC 23\/SC 23K":40,"TC 25":41,"TC 26":42,"TC 27":43,"TC 28":44,"TC 29":45,"TC 31":46,"TC 31\/SC 31G":47,"TC 31\/SC 31J":48,"TC 31\/SC 31M":49,"TC 32":50,"TC 32\/SC 32A":51,"TC 32\/SC 32B":52,"TC 32\/SC 32C":53,"TC 33":54,"TC 34":55,"TC 34\/SC 34A":56,"TC 34\/SC 34B":57,"TC 34\/SC 34C":58,"TC 34\/SC 34D":59,"TC 35":60,"TC 36":61,"TC 36\/SC 36A":62,"TC 37":63,"TC 37\/SC 37A":64,"TC 37\/SC 37B":65,"TC 38":66,"TC 40":67,"TC 42":68,"TC 43":69,"TC 44":70,"TC 45":71,"TC 45\/SC 45A":72,"TC 45\/SC 45B":73,"TC 46":74,"TC 46\/SC 46A":75,"TC 46\/SC 46C":76,"TC 46\/SC 46F":77,"TC 47":78,"TC 47\/SC 47A":79,"TC 47\/SC 47C":80,"TC 47\/SC 47D":81,"TC 47\/SC 47E":82,"TC 47\/SC 47F":83,"TC 48":84,"TC 48\/SC 48B":85,"TC 48\/SC 48D":86,"TC 49":87,"TC 51":88,"TC 55":89,"TC 56":90,"TC 57":91,"TC 59":92,"TC 59\/SC 59A":93,"TC 59\/SC 59C":94,"TC 59\/SC 59D":95,"TC 59\/SC 59F":96,"TC 59\/SC 59K":97,"TC 59\/SC 59L":98,"TC 59\/SC 59M":99,"TC 59\/SC 59N":100,"TC 61":101,"TC 61\/SC 61B":102,"TC 61\/SC 61C":103,"TC 61\/SC 61D":104,"TC 61\/SC 61H":105,"TC 61\/SC 61J":106,"TC 62":107,"TC 62\/SC 62A":108,"TC 62\/SC 62B":109,"TC 62\/SC 62C":110,"TC 62\/SC 62D":111,"TC 64":112,"TC 65":113,"TC 65\/SC 65A":114,"TC 65\/SC 65B":115,"TC 65\/SC 65C":116,"TC 65\/SC 65E":117,"TC 66":118,"TC 68":119,"TC 69":120,"TC 70":121,"TC 72":122,"TC 73":123,"TC 76":124,"TC 77":125,"TC 77\/SC 77A":126,"TC 77\/SC 77B":127,"TC 77\/SC 77C":128,"TC 78":129,"TC 79":130,"TC 80":131,"TC 81":132,"TC 82":133,"TC 85":134,"TC 86":135,"TC 86\/SC 86A":136,"TC 86\/SC 86B":137,"TC 86\/SC 86C":138,"TC 87":139,"TC 88":140,"TC 89":141,"TC 90":142,"TC 91":143,"TC 94":144,"TC 95":145,"TC 96":146,"TC 97":147,"TC 99":148,"TC 100":149,"TC 100\/TA 1":150,"TC 100\/TA 2":151,"TC 100\/TA 4":152,"TC 100\/TA 5":153,"TC 100\/TA 6":154,"TC 100\/TA 10":155,"TC 100\/TA 15":156,"TC 100\/TA 16":157,"TC 100\/TA 17":158,"TC 100\/TA 18":159,"TC 100\/TA 19":160,"TC 100\/TA 20":161,"TC 101":162,"TC 102":163,"TC 103":164,"TC 104":165,"TC 105":166,"TC 106":167,"TC 107":168,"TC 108":169,"TC 109":170,"TC 110":171,"TC 111":172,"TC 112":173,"TC 113":174,"TC 114":175,"TC 115":176,"TC 116":177,"TC 117":178,"PC 118":179,"TC 119":180,"TC 120":181,"TC 121":182,"TC 121\/SC 121A":183,"TC 121\/SC 121B":184,"TC 122":185,"TC 124":186,"TC 125":187,"PC 126":188,"CISPR":189,"CISPR\/CIS\/A":190,"CISPR\/CIS\/B":191,"CISPR\/CIS\/D":192,"CISPR\/CIS\/F":193,"CISPR\/CIS\/H":194,"CISPR\/CIS\/I":195,"ACEA":196,"ACEC":197,"ACEE":198,"ACOS":199,"ACSEC":200,"ACTAD":201,"SyC AAL":202,"SyC SM":203,"SyC Smart Cities":204,"SyC Smart Energy":205,"SEG 4":206,"SMB":207,"MSB":208,"CAB":209,"IECEE-CTL":210,"ISO\/IEC JTC 1":211,"ISO\/IEC JTC 1\/SC 2":212,"ISO\/IEC JTC 1\/SC 6":213,"ISO\/IEC JTC 1\/SC 7":214,"ISO\/IEC JTC 1\/SC 17":215,"ISO\/IEC JTC 1\/SC 22":216,"ISO\/IEC JTC 1\/SC 23":217,"ISO\/IEC JTC 1\/SC 24":218,"ISO\/IEC JTC 1\/SC 25":219,"ISO\/IEC JTC 1\/SC 27":220,"ISO\/IEC JTC 1\/SC 28":221,"ISO\/IEC JTC 1\/SC 29":222,"ISO\/IEC JTC 1\/SC 31":223,"ISO\/IEC JTC 1\/SC 32":224,"ISO\/IEC JTC 1\/SC 34":225,"ISO\/IEC JTC 1\/SC 35":226,"ISO\/IEC JTC 1\/SC 36":227,"ISO\/IEC JTC 1\/SC 37":228,"ISO\/IEC JTC 1\/SC 38":229,"ISO\/IEC JTC 1\/SC 39":230,"ISO\/IEC JTC 1\/SC 40":231,"ISO\/IEC JTC 1\/SC 41":232,"ISO\/IEC JTC 1\/SC 42":233,"ISO\/IEC JPC 2":234,"ISO\/TC 121":235,"ISO\/TC 207":236,"ISO\/TC 210":237,"ISO\/TC 229":238,"ISO\/TC 262":239,"ISO\/CASCO":240,"ISO\/COPOLCO":241,"ISO\/TMB":242}},
            filterMapping: {"rules":{"toggle_trf":{"activated":true,"display":false},"valid_only":{"display":false},"facets":{"date":{"display":false}}}},
            defaults: {
                facets: {},
                publicationIds: null,
                showTrf: false,
                collapsed: true
            },
            tags: [],
            publicationIds: null,
            openSidebar: false,
            dateRetrieved: false,
            filterTrees: {},

            init() {
                this.callApi(this.retrieveFilters());
            },

            searchTerm(event) {
                let data = event.detail;
                this.query = data.term;

                let tmpValidOnly = JSON.parse(JSON.stringify(this.validOnly));
                let tmpShowTrf = JSON.parse(JSON.stringify(this.showTrf));

                this.clearFilters(false);

                this.validOnly = tmpValidOnly;
                this.showTrf = tmpShowTrf;
                this.hasFilters = true;

                document.title = this.documentTitle.replace('TEXT_QUERY', this.query) + ' | IEC';

                this.callApi();
            },

            retrieveFilters() {
                let urlParams = new URLSearchParams(window.location.search);
                let filterString = urlParams.get('f');
                this.currentPage = parseInt(urlParams.get('p') ?? 1);
                let filters = null;

                if (filterString) {
                    filters = JSON.parse(atob(filterString));

                    let dateRange = filters.dateRanges;
                    if (dateRange && dateRange.publication_date) {
                        this.handleDateRangesFilter(dateRange)
                    }
                    this.facets = filters.terms;
                    this.validOnly = filters.validOnly;
                    this.showTrf = filters.showTrf;
                    this.displayMode = filters.displayMode;
                    this.publicationIds = filters.publicationIds;

                    delete filters.showTrf;
                    delete filters.displayMode;

                    if (this.facets && Object.values(this.facets).length > 0) {
                        this.hasFilters = true;
                    }
                }

                return filters;
            },

            handleDateRangesFilter(dateRange, updateFilters = true) {
                this.dateMin = dateRange.publication_date.min;
                this.dateMax = dateRange.publication_date.max;

                if (updateFilters) {
                    this.dateFilter = {
                        min: dateRange.publication_date.min,
                        max: dateRange.publication_date.max,
                    }
                }

                this.dateRetrieved = true;
            },

            callApi(payload = null) {
                let body = this.buildPayload(payload);

                let filters = btoa(JSON.stringify({
                    dateRanges: body.dateRanges,
                    terms: body.terms,
                    validOnly: body.validOnly,
                    publicationIds: body.publicationIds,
                    showTrf: this.showTrf,
                    displayMode: this.displayMode,
                }));

                if (this.needToPush()) {
                    this.pushToHistory(filters);
                }

                this.isLoading = true;

                fetch(
                    this.apiUrl,
                    {
                        method: 'post',
                        body: JSON.stringify(body),
                        headers: {'Content-Type': 'application/json'}
                    }
                ).then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        console.error('Search request failed', response);
                    }
                }).then(data => {
                    if (data.secondary) {
                        data = data.secondary;

                        let filterNames = [];
                        this.filters = [];
                        let keys = Object.keys(data.aggregations);
                        for (let key of keys) {
                            let value = data.aggregations[key];
                            if (key.includes('buckets#')) {
                                let filterName = key.replace('buckets#', '');

                                if (filterName === 'available_formats') {
                                    continue;
                                }

                                let buckets = value.root.nested.buckets;
                                filterNames.push(filterName);
                                this.filters[filterName] = {
                                    name: filterName,
                                    show: true,
                                    buckets: this.sortFilterData(filterName, null, buckets)
                                };
                            }
                        }

                        const minDateValue = data.aggregations['metrics#min_publication_date'].nested.value
                        const maxDateValue = data.aggregations['metrics#max_publication_date'].nested.value

                        if (minDateValue !== null && maxDateValue !== null) {
                            let minDate = new Date(minDateValue);
                            let maxDate = new Date(maxDateValue);

                            let oldDateFilter = JSON.parse(JSON.stringify(this.dateFilter));

                            this.dateFilter = {
                                min: minDate.toISOString().split('T')[0],
                                max: maxDate.toISOString().split('T')[0],
                            };

                            if (this.dateMin === null || this.dateMax === null) {
                                this.dateMin = this.dateFilter.min;
                                this.dateMax = this.dateFilter.max;
                            } else {
                                if (this.dateRetrieved === false && oldDateFilter.min !== this.dateFilter.min || oldDateFilter.max !== this.dateFilter.max) {
                                    this.dateMin = this.dateFilter.min;
                                    this.dateMax = this.dateFilter.max;
                                } else {
                                    this.dateRetrieved = false;
                                }
                            }
                        }

                        this.items = data.hits.hits;

                        this.totalItems = data.hits.total.value;
                        let totalForPages = this.totalItems
                        if (data.aggregations['cardinality#collapsed']) {
                            totalForPages = data.aggregations['cardinality#collapsed'].collapsed_count.value;
                        }
                        this.totalPages = Math.ceil(totalForPages / this.perPage);
                        this.totalPages = Math.min(this.totalPages, this.pagesLimit);

                        if (this.validOnly && this.filters['status']) {
                            this.filters['status'].show = false;
                        }

                        if (this.validOnly === false) {
                            this.$dispatch('update-tree', {
                                name: 'status'
                            });
                        }

                        delete this.filters['publication_type'];

                        this.buildTagsData(data);

                        for (let filter of filterNames) {
                            this.$dispatch('update-tree', {
                                name: filter
                            });
                        }
                    }

                    this.isLoading = false;
                });
            },

            buildPayload(baseData) {
                let payload = {
                    mode: this.mode,
                    query: this.query,
                    from: this.paginationFrom,
                    size: this.perPage,
                    validOnly: this.validOnly,
                    sortBy: [{reference: "asc"}],
                    language: this.language,
                    dateRanges: {},
                    terms: this.facets,
                    publicationIds: this.publicationIds,
                    showTrf: this.showTrf,
                    collapsed: this.collapsed
                };

                this.autoEnableTrf(payload);
                this.autoDisableValidOnly(payload);

                if (baseData) {
                    payload = {
                        ...payload,
                        ...baseData
                    }
                }

                if (this.dateMin && this.dateMax) {
                    if (this.dateMin !== this.dateFilter.min || this.dateMax !== this.dateFilter.max) {
                        let minDate = new Date(this.dateMin);
                        let maxDate = new Date(this.dateMax);
                        payload.dateRanges = {
                            publication_date: {
                                min: minDate.toISOString().split('T')[0],
                                max: maxDate.toISOString().split('T')[0],
                            }
                        };
                    }
                } else if (this.defaults.dateRanges) {
                    let minDate = new Date(this.defaults.dateRanges.publication_date.min);
                    let maxDate = new Date(this.defaults.dateRanges.publication_date.max);
                    payload.dateRanges = {
                        publication_date: {
                            min: minDate.toISOString().split('T')[0],
                            max: maxDate.toISOString().split('T')[0],
                        }
                    };
                }

                payload.from = (this.currentPage - 1) * this.perPage;

                return payload;
            },

            /*
             * automatically send the show TRF in query
             */
            autoEnableTrf(payload) {
                if (
                    
                    
                    typeof this.filterMapping.rules !== 'undefined'
                    && typeof this.filterMapping.rules.toggle_trf !== 'undefined'
                    && this.filterMapping.rules.toggle_trf.activated
                ) {
                    this.showTrf    = true;
                    payload.showTrf = true;
                }
            },

            /*
             * automatically remove the valid only publication in the query
             */
            autoDisableValidOnly(payload) {
                if (
                    
                    
                    typeof this.filterMapping.rules !== 'undefined'
                    && typeof this.filterMapping.rules.valid_only !== 'undefined'
                    && !this.filterMapping.rules.valid_only.activated
                ) {
                    this.validOnly    = false;
                    payload.validOnly = false;
                }
            },

            needToPush() {
                return true;
            },

            pushToHistory(filters) {
                window.history.pushState(
                    {filters: filters},
                    "",
                    BASE_URL + 'iec-search/result?q=' + this.query + '&p=' + this.currentPage + '&f=' + filters
                );
            },

            changeStatus() {
                this.dateMin = null;
                this.dateMax = null;

                if (this.filters['status']) {
                    this.filters['status'].show = !this.validOnly;
                }
                this.hasFilters = false;
                this.mode = 'FULL';

                this.$dispatch('filter-updated', {
                    validOnly: this.validOnly,
                    showTrf: this.showTrf,
                });

                this.callApi();
            },

            search() {
                this.hasFilters = this.query !== '';

                this.callApi();
            },

            loadFilters(event, mode = 'PARTIAL') {
                if (this.filters['status']) {
                    this.filters['status'].show = !this.validOnly;
                }
                this.hasFilters = this.dateMin != this.dateFilter.min
                    || this.dateMax != this.dateFilter.max
                    || this.showTrf;
                this.mode = mode;

                this.$dispatch('filter-updated', {
                    validOnly: this.validOnly,
                    showTrf: this.showTrf,
                });

                this.callApi();
            },

            clearFilters(call = true) {
                this.prevPage = 1;
                this.currentPage = 1;
                this.mode = 'FULL';
                this.dateMin = null;
                this.dateMax = null;
                this.publicationIds = JSON.parse(JSON.stringify(this.defaults.publicationIds));
                this.showTrf = this.defaults.showTrf;
                this.hasFilters = false;

                let facets = JSON.parse(JSON.stringify(this.defaults.facets));

                this.facets = Array.isArray(facets) ? {} : facets;

                if (call) {
                    this.callApi();
                }
            },

            async applyFacets() {
                this.isLoading = true;
                this.facets = {};

                for (let tree of Object.values(this.filterTrees)) {
                    let facet = tree.root.key;
                    if (this.facets[facet] === undefined) {
                        this.facets[facet] = {};
                    }

                    this.applyChildrenFacets(1, facet, tree.root);

                    if (Object.keys(this.facets[facet]).length === 0) {
                        delete this.facets[facet];
                    }
                }

                if (Object.keys(this.facets).length === 0) {
                    this.facets = {};
                }

                this.hasFilters = this.facets && Object.values(this.facets).length > 0;
                this.mode = 'PARTIAL';

                let facets = JSON.parse(JSON.stringify(this.defaults.facets));
                this.facets = this.mergeDeep(this.facets, facets);

                
                setTimeout(() => {
                    this.callApi();
                }, 3000)
            },

            mergeDeep(...objects) {
                const isObject = obj => obj && typeof obj === 'object';

                return objects.reduce((prev, obj) => {
                    Object.keys(obj).forEach(key => {
                        const pVal = prev[key];
                        const oVal = obj[key];

                        if (Array.isArray(pVal) && Array.isArray(oVal)) {
                            let data = pVal.concat(...oVal);
                            prev[key] = data.filter((value, index) => data.indexOf(value) === index);
                        } else if (isObject(pVal) && isObject(oVal)) {
                            prev[key] = this.mergeDeep(pVal, oVal);
                        } else {
                            prev[key] = oVal;
                        }
                    });

                    return prev;
                }, {});
            },

            applyChildrenFacets(level, facet, node) {
                if (level > 3) {
                    return;
                }

                for (let child of node.children) {
                    if (this.facets[facet][level] === undefined) {
                        this.facets[facet][level] = [];
                    }

                    if (child.value) {
                        let childKey = child.key;
                        childKey = childKey.replace(/^level_([0-9]+)_/, '');
                        this.facets[facet][level].push(childKey);
                    } else {
                        let nextLevel = level + 1;
                        this.applyChildrenFacets(nextLevel, facet, child)
                    }
                }

                if (this.facets[facet][level] && Object.keys(this.facets[facet][level]).length === 0) {
                    delete this.facets[facet][level];
                }
            },

            getDescription(source) {
                if (source.title && source.title.length > 0) {
                    return source.title;
                }

                if (source.abstract && source.abstract.length > 0) {
                    return source.abstract.split(' ').splice(0, 20).join(' ') + '...';
                }

                return '';
            },

            getTechnicalCommittee(source) {
                let levels = [];
                let committees = source.committee || {};
                Object.keys(committees).forEach((key, index) => {
                    if (/^level_([0-9]+)$/.test(key)) {
                        levels.push(committees[key])
                    }
                });

                levels = levels.filter((value, index) => levels.indexOf(value) === index);

                return levels.join('/');
            },

            isDisabled(level, include, filterName) {
                let result = this.defaults.facets
                    && this.defaults.facets[filterName]
                    && this.defaults.facets[filterName][level]
                    && this.defaults.facets[filterName][level].includes(include)

                return result !== undefined ? result : false;
            },

            getItemName(filterName, itemKey) {
                if (window.nameMapping[filterName]) {
                    return window.nameMapping[filterName][itemKey] ?? itemKey;
                } else {
                    return filterName === itemKey ? filterName : itemKey;
                }
            },

            getLabelName(itemName, level, filtername) {
                if (typeof itemName.details !== 'undefined') {
                    return itemName.details.top[0].metrics[filtername + '.level_' + level + '_details'];
                }

                return '';
            },

            sortFilterData(filterName, filterKey, data) {
                let order = null;
                if (this.filtersSortOrder[filterName]) {
                    if (filterName === 'committee') {
                        order = Object.keys(this.filtersSortOrder[filterName]).sort((a, b) => {
                            return b.length - a.length;
                        }).map(key => {
                            return {key, order: this.filtersSortOrder[filterName][key]};
                        });

                        let sorted = data.sort((a, b) => this.sortCommittee(a, b, order));

                        if (filterKey && data.length === 1 && data[0].key === filterKey) {
                            return {};
                        }

                        return sorted;
                    }

                    if (filterName === 'type' || filterName === 'header' || filterName === 'vap_type') {
                        order = this.filtersSortOrder[filterName];

                        return data.sort((a, b) => this.sortByOrder(a, b, order));
                    }
                }

                return data.sort((a, b) => this.sortWithKeys(a, b));
            },

            sortByNumbers(a, b, order = null) {
                return a - b;
            },

            sortWithKeys(a, b, order = null) {
                return a.key.localeCompare(b.key, undefined, {numeric: true});
            },

            sortByOrder(a, b, order) {
                return this.sortByNumbers(order[a.key] || 1000, order[b.key] || 1000);
            },

            sortCommittee(a, b, order) {
                let aOption = order.find(o => a.key.startsWith(o.key));
                let bOption = order.find(o => b.key.startsWith(o.key));

                if (!aOption || !bOption) {
                    if (!aOption && !bOption) {
                        return this.sortWithKeys(a, b);
                    }
                    if (!aOption) {
                        return 1;
                    }
                    return -1;
                }
                if (aOption.order !== bOption.order) {
                    return aOption.order - bOption.order;
                }
                return this.sortWithKeys(a, b);
            },

            buildTagsData(data) {
                this.tags = [];
                let vapTypes = data.aggregations['buckets#vap_type'].root.nested.buckets;
                vapTypes.forEach((type) => {
                    let name = window.vapTypeLabels[type.key] ?? '';
                    if (name) {
                        let tagClass = ''
                        let publicationType = window.publicationTypeMapping[type.key] ?? '';
                        if (publicationType) {
                            tagClass = window.vapDotClassMapping[publicationType]
                        }
                        this.tags.push({
                            key: type.key,
                            total: type.doc_count,
                            name: name,
                            filter: 'vap_type',
                            class: tagClass
                        });
                    }
                });

                let status = data.aggregations['buckets#status'].root.nested.buckets;
                status.forEach((type) => {
                    let name = window.statusLabels[type.key] ?? '';
                    if (name) {
                        this.tags.push({
                            key: type.key,
                            total: type.doc_count,
                            name: name,
                            filter: 'status',
                            class: window.statusDotClassMapping[type.key] ?? ''
                        });
                    }
                });
            },

            getRelatedPubs(item) {
                let items = item.inner_hits.collapsed.hits.hits

                return items.filter((relatedItem, index) => {
                    return relatedItem._source.id !== item._source.id;
                });
            },

            getSortedFilters() {
                let result = [];

                this.hideToggleTrf();
                this.hideToggleValidOnly();
                this.hideDateFacet();

                if (this.filters['header']) {
                    result.push(this.filters['header']);
                }
                if (this.filters['type'] && !this.isFacetHidden('type')) {
                    result.push(this.filters['type']);
                }
                if (this.filters['vap_type'] && !this.isFacetHidden('vap_type')) {
                    result.push(this.filters['vap_type']);
                }
                if (this.filters['committee']) {
                    result.push(this.filters['committee']);
                }
                if (this.filters['ics'] && !this.isFacetHidden('ics')) {
                    result.push(this.filters['ics']);
                }
                if (this.filters['status']) {
                    result.push(this.filters['status']);
                }

                return result;
            },

            hideToggleTrf() {
                if (
                    typeof this.filterMapping.rules !== 'undefined'
                    && typeof this.filterMapping.rules.toggle_trf !== 'undefined'
                    && !this.filterMapping.rules.toggle_trf.display
                ) {
                    this.trfAvailable = false;
                }
            },

            hideToggleValidOnly() {
                if (
                    typeof this.filterMapping.rules !== 'undefined'
                    && typeof this.filterMapping.rules.valid_only !== 'undefined'
                    && !this.filterMapping.rules.valid_only.display
                ) {
                    this.validOnlyAvailable = false;
                }
            },

            hideDateFacet() {
                if (
                    typeof this.filterMapping.rules !== 'undefined'
                    && typeof this.filterMapping.rules.facets.date !== 'undefined'
                    && !this.filterMapping.rules.facets.date.display
                ) {
                    this.dateMin = null;
                    this.dateMax = null;
                }
            },

            isFacetHidden(facet) {
                if (
                    typeof this.filterMapping.rules === 'undefined'
                    || typeof this.filterMapping.rules.facets[facet] === 'undefined'
                ) {
                    return false;
                }

                return !this.filterMapping.rules.facets[facet].display;
            },

            removeFilters() {
                this.clearFilters(false);

                this.validOnly = false;
                this.showTrf = true;

                this.changeStatus();
            },

            applyTrf() {
                this.dateMin = null;
                this.dateMax = null;
                this.loadFilters(null, 'FULL');
            }
        };
    }

    function nameHandleMouseMove(e) {
        let tooltip = e.target.parentNode.parentNode.parentNode.querySelector('.tooltip');
        tooltip.classList.remove('opacity-0');
        tooltip.style.left = (e.clientX + 16) + 'px';
        tooltip.style.top = (e.clientY + 24) + 'px';
        tooltip.style.opacity = '1';
    }

    function nameHandleMouseOut(e) {
        let tooltip = e.target.parentNode.parentNode.parentNode.querySelector('.tooltip');
        tooltip.classList.add('opacity-0');
        tooltip.style.opacity = '0';
    }

function categoryPage() {
        let categoryPage = {
            pageTitle: "",
            searchInFilters: true,
            displayMode: 'grid',
            displayChanged: false,
            perPageGrid: 12,
            perPageGridValues: ["12","24","48","96"],
            defaults: {"facets":[],"publicationIds":null,"showTrf":false,"collapsed":false,"dateRanges":{"publication_date":{"min":"2025-09-06","max":"2025-10-05"}},"hideDate":true},

            init() {
                let facets = JSON.parse(JSON.stringify(this.defaults.facets));
                this.facets =  Array.isArray(facets) ? {} : facets;
                this.publicationIds = JSON.parse(JSON.stringify(this.defaults.publicationIds));
                this.showTrf = this.defaults.showTrf;
                this.hasFilters = false;
                this.collapsed = this.defaults.collapsed;
                this.perPageList = this.perPage;
                this.perPageListValues = this.perPageValues;
                this.perPage = this.perPageGrid;
                this.perPageValues = this.perPageGridValues;

                if (this.defaults.dateRanges) {
                    this.handleDateRangesFilter(this.defaults.dateRanges, false)
                }

                this.callApi(this.retrieveFilters());
            },

            needToPush() {
                if (this.hasFilters || this.displayChanged || this.prevPage !== this.currentPage) {
                    return true;
                }

                return false;
            },

            pushToHistory(filters) {
                window.history.pushState(
                    {filters: filters},
                    "",
                    window.location.protocol
                    + '//'
                    + window.location.host
                    + window.location.pathname
                    + '?p='
                    + this.currentPage
                    +
                    '&f='
                    + filters
                );
            },

            changeDisplay(mode) {
                if (this.displayMode !== mode) {
                    this.displayChanged = true;
                    this.displayMode = mode;

                    if (this.displayMode === 'grid') {
                        this.perPage = this.perPageGrid;
                        this.perPageValues = this.perPageGridValues;
                    } else {
                        this.perPage = this.perPageList;
                        this.perPageValues = this.perPageListValues;
                    }

                    this.callApi();
                } else {
                    this.displayChanged = false;
                }
            }
        };

        return {
            ...searchPage(),
            ...categoryPage
        };
    }







Secured payment






Visa






Mastercard







AMEX






JCB









Union Pay









Paypal







Bank transfer





Several payment methods






Multilingual customer service support





Newsletter

Stay up to date with the free IEC Just Published newsletter. This email will be sent on the 1st each month and will contain all publications issued the previous month.



Newsletter


Email address



Subscribe








exclamation-circle











function initNewsletterForm() {
            return {
                errors: 0,
                hasCaptchaToken: 0,
                displayErrorMessage: false,
                errorMessages: [],
                setErrorMessages(messages) {
                    this.errorMessages = [messages]
                    this.displayErrorMessage = this.errorMessages.length
                },
                submitForm() {
                    // Do not rename $form, the variable is expected to be declared in the recaptcha output
                    const $form = document.querySelector('#newsletter-validate-detail');
                    
                    if (this.errors === 0) {
                        $form.submit();
                    }
                }
            }
        }


Follow us






























IEC










International
Electrotechnical
Commission


Founded in 1906, the IEC (International Electrotechnical Commission) is the world’s leading organization for the preparation and publication of international standards for all electrical, electronic and related technologies.
International Standards facilitate technical innovation, efficient and sustainable energy access, smart urbanization and transportation systems, climate change mitigation, and increases the safety of people and the environment.





Associated sites


IEC website



IEC e-tech magazine



IEC mapping platform



IEC products and services portal







Information


FAQ



Terms & conditions



Privacy notice




Cookie policy








Customer service

3 rue de Varembé

PO Box 131

CH-1211 Geneva 20

Switzerland


Contact us






Copyright
©
IEC
2025. All rights reserved


function hyvaFormValidationRules() {
    return {
        registerRule(rule) {
            if (typeof hyva.formValidation !== "undefined") {
                hyva.formValidation.addRule(rule.name, rule.callback);
            }
        }
    };
}

function registerHyvaFormValidationLatinCharacters() {
    return {
        init() {
            const rule = {
                'name': 'validate-no-latin-characters',
                'callback': function(value, options, field, context) {
                    if (value == '') {
                        return true;
                    }

                    return !new RegExp(/[^\p{sc=Latin}\d&'\(\);\s\-,.\/_]+/ui).test(value) ? true
                        : 'Please\u0020use\u0020only\u0020Latin\u0020alphabet\u0020characters.'
                }
            }

            window.dispatchEvent(
                new CustomEvent(
                    'hyva-form-validation-register-rule', {
                        detail: {
                            rule: rule
                        }
                    }
                )
            );
        }
    };
}

window.stealthUrl = 'https://ruby.ops.iec.ch/matomo.php';
        window.matomoUrl = 'https://ruby.ops.iec.ch/';
        var _paq = window._paq = window._paq || [];
        (function () {
            
                        _paq.push(["setTrackerUrl", "https://ruby.ops.iec.ch/matomo.php"]);
                         _paq.push(["setSiteId", "11"]);
                                _paq.push(["setEcommerceView",
                
                productSku = false,
                
                productName = false,
                
                category = "Just\u0020Published"
            ]);
                         if (document.prerendering) {
                document.addEventListener('prerenderingchange', () => {
                    _paq.push(['trackPageView']);
                }, {
                    once: true,
                });
            } else {
                _paq.push(['trackPageView']);
            }
             _paq.push(['enableLinkTracking']);
             })();

        var eventNames = [
            "wheel",
            "touchstart",
            "mouseover",
            "scroll",
            "keydown"
        ];
        function addMultiEventListener(element, eventNames, listener) {
            for (var i=0, iLen=eventNames.length; i<iLen; i++) {
                element.addEventListener(eventNames[i], listener, true);
            }
        }
        function removeMultiEventListener(element, eventNames, listener) {
            for (var i=0, iLen=eventNames.length; i<iLen; i++) {
                element.removeEventListener(eventNames[i], listener, true);
            }
        }
        var isMatomoLoaded = false;
        const loadMatomoScript = () => {
            if (!isMatomoLoaded) {
                isMatomoLoaded = true;
                var d = document, g = d.createElement('script'), s = d.getElementsByTagName('script')[0];
                g.type = 'text/javascript';
                g.async = true;
                g.onload = () => {
                                        let script, html, currentSummaryCount, currentSubtotalAmount;
                    const trackingCartData = (cartdata) => {
                        if(
                            (cartdata.subtotalAmount && cartdata.summary_count) &&
                            (
                                (cartdata.subtotalAmount !== currentSubtotalAmount) ||
                                (cartdata.summary_count !== currentSummaryCount)
                            )
                        ){
                            currentSubtotalAmount = cartdata.subtotalAmount;
                            currentSummaryCount = cartdata.summary_count;
                            script = document.createElement("script");
                            script.type='text/javascript';
                            html = "";
                            let totalAmount = cartdata.subtotalAmount;
                            let items = cartdata.items;
                            if(items){
                                items.forEach(function(item){
                                    item.category_name = "";
                                    html += "_paq.push(['addEcommerceItem', \"" +
                                        item.product_sku + "\", \""+item.product_name+"\", \""+
                                        item.category_name+"\", "+item.product_price_value+", "+
                                        item.qty+"]);";
                                })
                            }
                            script.innerHTML = html;
                            document.head.appendChild(script);
                            script = document.createElement("script");
                            script.type='text/javascript';
                            html = "";
                            html += "_paq.push(['trackEcommerceCartUpdate', "+totalAmount+"]);";
                            script.innerHTML = html;
                            document.head.appendChild(script);
                        }
                    }
                    
                    window.addEventListener("private-content-loaded", event => {
                        const sectionData = event.detail.data;
                        if (sectionData){
                            let cart = sectionData.cart;
                            trackingCartData(cart);
                        }
                    });
                    
                    if (typeof require !== 'undefined') {
                        require(['Magento_Customer/js/customer-data'], customerData => {
                            customerData.get('cart').subscribe((cart) => {
                                trackingCartData(cart);
                            })
                        })
                    }
                     };
                                                            g.src = 'https://ruby.ops.iec.ch/matomo.js';
                      s.parentNode.insertBefore(g, s);
                removeMultiEventListener(window, eventNames, loadMatomoScript);
            } else {
                removeMultiEventListener(window, eventNames, loadMatomoScript);
            }
        }
                loadMatomoScript();

(function () {
        
            })();

(() => {
        function src_default(Alpine) {
            Alpine.directive("intersect", Alpine.skipDuringClone((el, { value, expression, modifiers }, { evaluateLater, cleanup }) => {
                let evaluate = evaluateLater(expression);
                let options = {
                    rootMargin: getRootMargin(modifiers),
                    threshold: getThreshold(modifiers)
                };
                let observer = new IntersectionObserver((entries) => {
                    entries.forEach((entry) => {
                        if (entry.isIntersecting === (value === "leave"))
                            return;
                        evaluate();
                        modifiers.includes("once") && observer.disconnect();
                    });
                }, options);
                observer.observe(el);
                cleanup(() => {
                    observer.disconnect();
                });
            }));
        }
        function getThreshold(modifiers) {
            if (modifiers.includes("full"))
                return 0.99;
            if (modifiers.includes("half"))
                return 0.5;
            if (!modifiers.includes("threshold"))
                return 0;
            let threshold = modifiers[modifiers.indexOf("threshold") + 1];
            if (threshold === "100")
                return 1;
            if (threshold === "0")
                return 0;
            return Number(`.${threshold}`);
        }
        function getLengthValue(rawValue) {
            let match = rawValue.match(/^(-?[0-9]+)(px|%)?$/);
            return match ? match[1] + (match[2] || "px") : void 0;
        }
        function getRootMargin(modifiers) {
            const key = "margin";
            const fallback = "0px 0px 0px 0px";
            const index = modifiers.indexOf(key);
            if (index === -1)
                return fallback;
            let values = [];
            for (let i = 1; i < 5; i++) {
                values.push(getLengthValue(modifiers[index + i] || ""));
            }
            values = values.filter((v) => v !== void 0);
            return values.length ? values.join(" ").trim() : fallback;
        }

        document.addEventListener("alpine:init", () => {
            window.Alpine.plugin(src_default);
        });
    })();

for (const [selector, deferUntil] of Object.entries({".product-slider section[x-data]":"intersect",".product-info [x-data]":"intersect","#filters-content [x-data]":"intersect","#review_form":"intersect","section[x-data^=initRecentlyViewedProductsComponent]":"intersect","div[x-data^=initBundleOptions]":"intersect","#product_addtocart_form [x-data]":"intersect","#notice-cookie-block":"idle"})) {
        document.querySelectorAll(selector).forEach(el => el.setAttribute('x-defer', `${deferUntil}`));
    }

(function () {
        "use strict";

        const hasAlpine = new Promise(resolve => {
            window.addEventListener('alpine:initialized', resolve, {once: true, passive: true});
        });

        const hasInteract = new Promise(resolve => {
            (events => {
                const onInteract = () => {
                    resolve();
                    events.forEach(type => window.removeEventListener(type, onInteract));
                }
                events.forEach(type => window.addEventListener(type, onInteract, {once: true, passive: true}))
            })(['touchstart', 'mouseover', 'wheel', 'scroll', 'keydown'])
        });

        const onIntersect = (el) => {
            return new Promise(resolve => {
                const observer = new IntersectionObserver(entries => {
                    for (const entry of entries) {
                        if (entry.isIntersecting) {
                            observer.disconnect()
                            resolve();
                        }
                    }
                }, {});
                observer.observe(el);
            });
        }

        function runComponent(el) {
            hasAlpine.then(() => {
                el.removeAttribute('x-ignore');
                queueMicrotask(() => Alpine.initTree(el));
            });
        }

        function initDeferredComponents() {
            document.querySelectorAll('[x-data][x-defer]').forEach(el => {
                el.setAttribute('x-ignore', '');
                const deferUntil = (el.getAttribute('x-defer') || '').trim();
                switch (deferUntil) {
                    case 'interact':
                        hasInteract.then(() => runComponent(el));
                        break;
                    case 'intersect':
                        onIntersect(el).then(() => runComponent(el))
                        break;
                    case 'idle':
                        window.requestIdleCallback
                            ? window.requestIdleCallback(() => runComponent(el), {timeout: 4000})
                            : setTimeout(() => runComponent(el), 4000);
                        break;
                    case 'eager':
                        runComponent(el);
                        break;
                    default:
                        if (deferUntil.startsWith('event:') && deferUntil.length > 6) {
                            window.addEventListener(deferUntil.substring(6), () => runComponent(el), {once: true, passive: true});
                        }
                }
            });
        }

        window.addEventListener('alpine:init', initDeferredComponents, {once: true, passive: true});
    })()

'use strict';
    function dispatchMessages(messages, hideAfter) {
        const messagesEvent = new CustomEvent("messages-loaded", {
            detail: {
                messages: messages,
                hideAfter: hideAfter
            }
        });
        window.dispatchEvent(messagesEvent);
    }

    if (typeof hyva === 'undefined' || (!hyva.getBrowserStorage || !hyva.getCookie || !hyva.setCookie)) {
        console.warn("Hyvä helpers are not loaded yet. Make sure they are included before this script");
    }

    (function( hyva, undefined ) {

        hyva.initFormKey = () => {
            const inputSelector = 'input[name="form_key"]',
                formKey = hyva.getFormKey();

            Array.from(document.querySelectorAll(inputSelector)).map(function (input) {
                input.value = formKey
            });
        }

        hyva.initMessages = () => {
            try {
                const messages = hyva.getCookie('mage-messages');
                window.mageMessages = messages ? JSON.parse(decodeURIComponent(messages)) : [];

                dispatchMessages(window.mageMessages);

                                // empty `mage-messages` cookie
                const skipSetDomain = true;
                hyva.setCookie('mage-messages','', -1, skipSetDomain);

            } catch (error) {
                console.warn('Error parsing Cookie Messages:', error);
            }
        }

        window.addEventListener('DOMContentLoaded', hyva.initFormKey);
        window.addEventListener('alpine:initialized', hyva.initMessages);


    }( window.hyva = window.hyva || {} ));

'use strict';
    {
        const private_content_key = 'mage-cache-storage';
        const private_content_expire_key = 'mage-cache-timeout';
        const private_content_version_key = 'private_content_version';
        const section_data_ids_key = 'section_data_ids';
        const mage_cache_session_id_key = 'mage-cache-sessid';
        const last_visited_store_key = 'last_visited_store';

        const ttl = 3600;

 if (typeof hyva === 'undefined' || (!hyva.getBrowserStorage || !hyva.getCookie || !hyva.setCookie)) {
            console.warn("Hyvä helpers are not loaded yet. Make sure they are included before this script");
        }

        function loadSectionData () {
            const browserStorage = hyva.getBrowserStorage();
            if (!browserStorage) {
                typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                    [{
                        type: "warning",
                        text: "Please enable LocalStorage in your browser."
                    }]
                );
                return;
            }
            try {
                let isInvalid = false;

 if (hyva.getCookie(last_visited_store_key) !== CURRENT_STORE_CODE) {
                    isInvalid = true;
                }
                hyva.setCookie(last_visited_store_key, CURRENT_STORE_CODE, false, false);

 if (!hyva.getCookie(mage_cache_session_id_key)) {
                    isInvalid = true;
                    browserStorage.removeItem(private_content_key);
                    const skipSetDomain = true;
                    const days = false;
                    hyva.setCookie(mage_cache_session_id_key, true, days, skipSetDomain)
                }

                const cookieVersion = hyva.getCookie(private_content_version_key);
                const storageVersion = browserStorage.getItem(private_content_version_key);

                if (cookieVersion && !storageVersion || cookieVersion !== storageVersion) {
                    isInvalid = true;
                }

                const privateContentExpires = browserStorage.getItem(private_content_expire_key);
                if (privateContentExpires && new Date(privateContentExpires) < new Date()) {
                    browserStorage.removeItem(private_content_key);
                }

                if (isInvalid && cookieVersion) {
                    fetchPrivateContent([]);
                } else if (cookieVersion && storageVersion && cookieVersion === storageVersion) {
                    const privateContent = JSON.parse(browserStorage.getItem(private_content_key));
                    if (
                        privateContent &&
                        privateContentExpires &&
                        privateContent.cart &&
                        privateContent.customer
                    ) {
                        dispatchPrivateContent(privateContent);
                    } else {
                        fetchPrivateContent([]);
                    }
                } else {
                    if (document.getElementById('default-section-data')) {
                        const privateContent = JSON.parse(document.getElementById('default-section-data').innerText.trim());
                        dispatchPrivateContent(privateContent);
                    } else {
                        dispatchPrivateContent({});
                    }
                }

            } catch (error) {
                console.warn('Error retrieving Private Content:', error);
            }
        }

        hyva.alpineInitialized(loadSectionData)
        window.addEventListener('reload-customer-section-data', loadSectionData);

        function dispatchPrivateContent(data) {
            const privateContentEvent = new CustomEvent("private-content-loaded", {
                detail: {
                    data: data
                }
            });
            window.dispatchEvent(privateContentEvent);
        }

 function fetchPrivateContent(sections) {
            fetch(`${BASE_URL}customer/section/load/?sections=${encodeURIComponent(sections.join(','))}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.ok && response.json())
                .then(
                    data => {
                        if (data) {
                            try {
                                const browserStorage = hyva.getBrowserStorage();

                                
                                const oldSectionData = JSON.parse(browserStorage.getItem(private_content_key) || '{}') || {};

 if ((! data.cart || ! data.cart.cartId) && oldSectionData['checkout-data']) {
                                    delete oldSectionData['checkout-data'];
                                }
                                const newSectionData = Object.assign(oldSectionData, data);

                                dispatchPrivateContent(newSectionData);

                                
                                if (newSectionData.messages && newSectionData.messages.messages ) {
                                    newSectionData.messages.messages = [];
                                }

                                browserStorage.setItem(private_content_key, JSON.stringify(newSectionData));

                                const expiresAt = new Date(Date.now() + (ttl * 1000)).toISOString();
                                browserStorage.setItem(private_content_expire_key, expiresAt);

                                const newCookieVersion = hyva.getCookie(private_content_version_key);
                                browserStorage.setItem(private_content_version_key, newCookieVersion);

                                
                                
                                hyva.setCookie(
                                    section_data_ids_key,
                                    JSON.stringify(
                                        Object.keys(data).reduce((sectionDataIds, sectionKey) => {
                                            sectionDataIds[sectionKey] = data[sectionKey]['data_id'];
                                            return sectionDataIds;
                                        }, {})
                                    ),
                                    false,
                                    true
                                );
                            } catch (error) {
                                console.warn("Couldn't store privateContent", error);
                            }
                        }
                    }
                );
        }
    }
(() => {
 document.addEventListener('submit', event => event.target.action = event.target.action.replace('%25uenc%25', hyva.getUenc()));
    })()

(events => {
        const dispatchUserInteractionEvent = () => {
            events.forEach(type => window.removeEventListener(type, dispatchUserInteractionEvent))
            window.dispatchEvent(new Event('init-external-scripts'))
        };
        events.forEach(type => window.addEventListener(type, dispatchUserInteractionEvent, {once: true, passive: true}))
    })(['touchstart', 'mouseover', 'wheel', 'scroll', 'keydown'])
function initConfigurableOptions(productId, optionConfig) {

        function findPathParam(key) {
                        const baseUrl = (BASE_URL.substring(0, 2) === '//' ? 'http:' : '') + BASE_URL;
            const baseUrlParts = (new URL(baseUrl)).pathname.replace(/\/$/, '').split('/');
            const pathParts = window.location.pathname.split('/').slice(baseUrlParts.length + 3);
            for (let i = 0; i < pathParts.length; i += 2) {
                if (pathParts[i] === key && pathParts.length > i) {
                    return pathParts[i + 1];
                }
            }
        }

        return {
            optionConfig,
            productId,
            itemId: (new URLSearchParams(window.location.search)).get('id') || findPathParam('id'),
            allowedAttributeOptions: [],
            selectedValues: [],
            init() {
                this.findAllowedAttributeOptions();
                this.$nextTick(() => {
                    if (typeof this.optionConfig.defaultValues === 'object') {
                        for (const [attributeId, value] of Object.entries(this.optionConfig.defaultValues)) {
                            this.changeOption(attributeId, value + '');
                        }
                    }
                    this.preselectQuerystringItems();
                    this.preselectLocationHashItems();
                });
            },
            productIndex: 0,
            productIndexForPrice: 0,
            optionIsActive(attributeId, optionId) {
                                return !!this.getAllowedAttributeOptions(attributeId).find(
                    option => option.id === optionId
                )
            },
            optionIsEnabled(attributeId, optionId) {
                                for (const productId in this.optionConfig.index) {
                    if (this.optionConfig.index[productId][attributeId] === optionId) {
                        return true;
                    }
                }
                return false;
            },
            findSimpleIndex() {
                                this.productIndex = this.calculateSimpleIndexForPartialSelection(this.selectedValues);
                this.productIndexForPrice = this.findCheapestProductForPartialSelection(this.selectedValues);
            },
            calculateSimpleIndexForPartialSelection(selectedValues) {
                if (selectedValues.length === 0) return 0;
                return this.findProductIdsForPartialSelection(selectedValues)[0];
            },
            calculateSimpleIndexForFullSelection(selectedValues) {
                if (! this.isFullSelection(selectedValues)) return false;

                const productIndexes = this.optionConfig.index;
                return Object.keys(productIndexes).find(productIndex => {
                    const productCandidateOptions = productIndexes[productIndex];

                    for (const productOption in productCandidateOptions) {
                        if (
                            !selectedValues[productOption] ||
                            selectedValues[productOption] !== productCandidateOptions[productOption]
                        ) {
                            return false;
                        }
                    }
                    return productIndex;
                });
            },
            findAllowedAttributeOptions() {
                                this.allowedAttributeOptions = this.calculateAllowedAttributeOptions(this.selectedValues);
            },
            calculateAllowedAttributeOptions(selectedValues) {
                const allAttributes = this.optionConfig.attributes;
                const allAttributesSorted = Object.values(allAttributes).sort((a,b) => {
                    return a.position - b.position
                });

                const newAllowedAttributeOptions = [];

                allAttributesSorted.forEach(attribute => {
                    const selectionWithoutAttr = Object.assign({}, this.removeAttrFromSelection(selectedValues, attribute.id));
                    const availableIndexes = this.calculateAvailableProductIndexes(selectionWithoutAttr);
                    newAllowedAttributeOptions[attribute.id] = allAttributes[attribute.id].options.filter(option => {
                        return !!option.products.find(product => {
                            return availableIndexes.includes(product);
                        })
                    });
                });
                return newAllowedAttributeOptions;
            },
            calculateAvailableProductIndexes(selectedOptions) {
                if (Object.keys(selectedOptions).length === 0) {
                                        if (Object.values(this.optionConfig.salable || {}).length) {
                                                return [].concat.apply([], [].concat.apply([], Object.values(this.optionConfig.salable).map(Object.values))).filter((x, i, a) => a.indexOf(x) === i)
                    }
                                        return Object.keys(this.optionConfig.index);
                }

                                const selectedIds = Object.keys(selectedOptions);
                if (Object.values(this.optionConfig.salable || {}).length) {
                                        const selectedOptionIndexes = selectedIds.map(attrId => {
                        const optionValue = selectedOptions[attrId];
                        return this.optionConfig.salable[attrId] && this.optionConfig.salable[attrId][optionValue] || []
                    })
                                        return selectedOptionIndexes.reduce((acc, optionIndexes) => {
                        return acc.filter(index => optionIndexes.includes(index));
                    });
                } else {
                                        const productIndexes = this.optionConfig.index;
                    return Object.keys(productIndexes).filter(index => {
                                                for (const attrId of selectedIds) {
                            if (productIndexes[index][attrId] !== `${selectedOptions[attrId]}`) return false
                        }
                        return true
                    });
                }
            },
            findAttributeByOptionId(optionId) {
                for (const attributeId in this.optionConfig.attributes) {
                    const attributeOptions = this.optionConfig.attributes[attributeId].options || [];
                    if (attributeOptions.find(option => option.id === optionId)) {
                        return attributeId;
                    }
                }
            },
            getAllowedAttributeOptions(attributeId) {
                return this.allowedAttributeOptions[attributeId] || []
            },
            getAllAttributeOptions(attributeId) {
                return (
                    this.optionConfig.attributes[attributeId] &&
                    this.optionConfig.attributes[attributeId].options
                ) || []
            },
            getProductIdsForOption(option) {
                const attributeId = this.findAttributeByOptionId(option.id);
                const allOptions = this.optionConfig.attributes[attributeId];
                const opt = (allOptions && allOptions.options || []).find(o => o.id === option.id);
                return opt && opt.products
                    ? opt.products
                    : [];
            },
            findProductIdsForPartialSelection(optionSelection) {
                const candidateProducts = Object.values(optionSelection).reduce((candidates, optionId) => {
                    const newCandidates = this.getProductIdsForOption({id: optionId});
                    return candidates === null
                        ? newCandidates
                        : candidates.filter(productId => newCandidates.includes(productId));
                }, null);
                return candidateProducts || [];
            },
            findCheapestProductForPartialSelection(optionSelection) {
                const candidateProducts = this.findProductIdsForPartialSelection(optionSelection);
                return candidateProducts.reduce((cheapest, simpleIdx) => {
                    // in the first iteration we start with simpleIdx as the currently cheapest product
                    if (! this.optionConfig.optionPrices[cheapest]) return simpleIdx;
                    const knownCheapestPrice = this.optionConfig.optionPrices[cheapest].finalPrice.amount;
                    return knownCheapestPrice > this.optionConfig.optionPrices[simpleIdx].finalPrice.amount
                        ? simpleIdx
                        : cheapest;
                }, 0)
            },
            findProductIdToUseForOptionPrice(option) {
                // try to find a product for a complete selection
                const attributeId = this.findAttributeByOptionId(option.id);
                const optionSelection = Object.assign({}, this.selectedValues, {[attributeId]: option.id});
                const matchingSimpleIndex = this.calculateSimpleIndexForFullSelection(optionSelection);
                // if there is no complete selection, use the cheapest product for the option
                return matchingSimpleIndex || this.findCheapestProductForPartialSelection(optionSelection);
            },
            getAttributeOptionLabel(option) {
                const optionProduct = this.findProductIdToUseForOptionPrice(option);

                if ((! optionProduct) || (optionProduct === this.productIndexForPrice)) {
                    return option.label;
                }

                const currentPrice = this.getOptionPriceAdjustmentBasePrice();

                if (this.optionConfig.optionPrices[optionProduct]) {
                    const optionPrice = this.optionConfig.optionPrices[optionProduct].finalPrice.amount;
                    if (optionPrice !== currentPrice){
                        return option.label + ' ' + hyva.formatPrice(optionPrice - currentPrice, true);
                    }
                }
                return option.label;
            },
            getOptionPriceAdjustmentBasePrice() {
                if (this.optionConfig.optionPrices[this.productIndexForPrice]) {
                    return this.optionConfig.optionPrices[this.productIndexForPrice].finalPrice.amount
                }
                return this.optionConfig.prices.finalPrice.amount; // default price if no option selection
            },
            clearOptionIfActive(optionId, value) {
                if (this.selectedValues[optionId] === value) {
                    this.blurLabel()
                    this.changeOption(optionId, '')
                }
            },
            removeAttrFromSelection(selectedValues, attributeId) {
                                attributeId = parseInt(attributeId);
                return selectedValues.reduce((newSelection, val, attr) => {
                    if (attr !== attributeId) {
                        newSelection[attr] = val;
                    }
                    return newSelection;
                }, []);
            },
            changeOption(attributeId, value) {
                if (value === '') {
                    this.selectedValues = this.removeAttrFromSelection(this.selectedValues, attributeId)
                } else if (value && this.getAllowedAttributeOptions(attributeId).find(option => option.id === value)) {
                                        this.selectedValues[attributeId] = value;
                }
                this.findSimpleIndex();
                this.findAllowedAttributeOptions();
                this.updatePrices();
                this.updateGallery();

                const candidates = this.findProductIdsForPartialSelection(this.selectedValues);

                window.dispatchEvent(
                    new CustomEvent(
                        'configurable-selection-changed',
                        {
                            detail: {
                                productId: this.productId,
                                optionId: attributeId,
                                value: value,
                                productIndex: this.productIndex,
                                selectedValues: this.selectedValues,
                                candidates: candidates,
                                skuCandidates: Object.values(candidates).map(id => this.optionConfig.sku[id]),
                            }
                        }
                    )
                );
            },
            calculateIsMinimalPrice() {
                return ! this.isFullSelection(this.selectedValues);
            },
            isFullSelection(selectedValues) {
                return Object.values(selectedValues).length === Object.keys(this.optionConfig.attributes).length;
            },
            updatePrices() {
                const value = this.optionConfig.optionPrices[this.productIndexForPrice] || this.optionConfig.prices;
                window.dispatchEvent(
                    new CustomEvent(
                        "update-prices-" + this.productId,
                        {
                            detail: Object.assign(
                                value,
                                { isMinimalPrice: this.calculateIsMinimalPrice() }
                            )
                        }
                    )
                );
            },
            updateGallery () {
                if (this.productIndex) {
                    const images = this.optionConfig.images[this.productIndex];
                    images && window.dispatchEvent(new CustomEvent(
                        "update-gallery",
                        { detail: this.sortImagesByPosition(images) }
                    ));
                } else {
                    window.dispatchEvent(new Event("reset-gallery"));
                }
            },
            sortImagesByPosition(images) {
                return images.sort((x, y) => {
                    return x.position === y.position ? 0 : (parseInt(x.position) > parseInt(y.position) ? 1 : -1)
                });
            },
            onGetCartData(data) {
                            },
            preselectCartItems(data) {
                // pre-select options based on cart data for current (quote) itemId
                const cart = data && data.cart;
                if (cart && cart.items) {
                    const cartItem = cart.items.find((item) => {
                        return (
                            item.item_id === this.itemId
                            && item.product_id === this.productId
                        )
                    });
                    if (cartItem && cartItem.options && cartItem.options.length) {
                        cartItem.options.map(option => {
                            this.changeOption(option.option_id, option.option_value);
                        })
                    }
                }
            },
            preselectQuerystringItems() {
                // pre-select option like ?size=167
                const urlQueryParams = new URLSearchParams(window.location.search.replace('?',''));
                this.preselectItemsBasedOnLocation(attribute => urlQueryParams.get(attribute.code));
            },
            preselectLocationHashItems() {
                // pre-select option like #144=167
                const urlHashParams = new URLSearchParams(window.location.hash.replace('#',''));
                this.preselectItemsBasedOnLocation(attribute => urlHashParams.get(attribute.id));
            },
            preselectItemsBasedOnLocation(getLocationValue) {
                Object.values(this.optionConfig.attributes).map(attribute => {
                    const v = getLocationValue(attribute);
                    v && this.changeOption(attribute.id, v)
                });
            }
        }
    }
function initSwatchOptions(swatchConfig) {
        return {
            swatchConfig,
            getAttributeSwatchData(attributeId) {
                const swatchConfig = Object.assign({}, this.swatchConfig[attributeId]);
                swatchConfig['details'] = JSON.parse(swatchConfig['additional_data']);

                return swatchConfig;
            },
            mapSwatchTypeNumberToTypeCode(typeNumber) {
                switch ("" + typeNumber) {
                    case "1":
                        return "color"
                    case "2":
                        return "image"
                    case "3":
                        return "empty"
                    case "0":
                    default:
                        return "text"
                }
            },
            getTypeOfFirstOption(attributeId) {
                for (const optionId in this.swatchConfig[attributeId]) {
                    const option = this.swatchConfig[attributeId][optionId];
                    if (typeof option.type !== 'undefined') {
                        return this.mapSwatchTypeNumberToTypeCode(option.type);
                    }
                }
            },
            getVisualSwatchType(attributeId, targetOptionId) {
                // If a type configuration is present for the given option id, use it
                const config = this.swatchConfig[attributeId];
                if (config[targetOptionId] && typeof config[targetOptionId].type !== 'undefined') {
                    return this.mapSwatchTypeNumberToTypeCode(config[targetOptionId].type);
                }

                // Otherwise - if no config is present for the target option - use the type of the first option
                // with a type property from the attribute, thus assuming its the same type as the target option.
                // (This edge case condition can occur on single swatch products if some options are not salable)
                return this.getTypeOfFirstOption(attributeId);
            },
            getSwatchType(attributeId, optionId) {
                // Deserialize the attribute details the first time they are used
                if (this.swatchConfig[attributeId] && ! this.swatchConfig[attributeId].details) {
                    this.swatchConfig[attributeId] = this.getAttributeSwatchData(attributeId);
                }
                const type =  this.swatchConfig[attributeId] &&
                    this.swatchConfig[attributeId].details &&
                    this.swatchConfig[attributeId].details.swatch_input_type ||
                    "empty";
                return type === 'visual' ? this.getVisualSwatchType(attributeId, optionId) : type;
            },
            isTextSwatch(attributeId, optionId) {
                return this.getSwatchType(attributeId, optionId) === 'text';
            },
            isVisualSwatch(attributeId, optionId) {
                const type = this.getSwatchType(attributeId, optionId);

                return ['image', 'color'].includes(type);
            },
            getSwatchBackgroundStyle(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                const type = this.getSwatchType(attributeId, optionId);

                if (type === "color") {
                        return 'background-color:' + config.value;
                } else if (type === "image") {
                        return "background: #ffffff url('" + config.value + "') no-repeat center";
                } else {
                    return '';
                }
            },
            getSwatchText(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                return config.label || config.value || this.getOptionLabelFromOptionConfig(attributeId, optionId);
            },
            getOptionLabelFromOptionConfig(attributeId, optionId) {
                // Fallback if no value is present in swatchConfig data
                // Reference issue https://gitlab.hyva.io/hyva-themes/magento2-default-theme/-/issues/190
                const option = this.getAllAttributeOptions(attributeId).filter(option => option.id === optionId);
                return option && option[0] && option[0].label ||'';
            },
            getSwatchConfig(attributeId, optionId) {
                return this.swatchConfig[attributeId] && this.swatchConfig[attributeId][optionId]
                    ? this.swatchConfig[attributeId][optionId]
                    : false;
            },
            activeTooltipItem: false,
            tooltipPositionElement: false,
            isTooltipVisible() {
                return this.activeTooltipItem &&
                    this.getSwatchConfig(
                        this.activeTooltipItem.attribute,
                        this.activeTooltipItem.item
                    );
            },
            isFirstItemCol() {
                return this.activeTooltipItem.index === 0;
            },
            getTooltipImageStyle(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                const type = this.getSwatchType(attributeId, optionId);

                if (type === "color") {
                    return 'background-color:' + config.value + '; width: 110px; height: 90px;';
                } else if (type === "image") {
                    return "background: #ffffff url('" + config.thumb +
                        "') center center no-repeat; width: 110px; height: 90px;";
                } else {
                    return 'display:none';
                }
            },
            getTooltipPosition() {
                return this.tooltipPositionElement ?
                    `top: ${this.tooltipPositionElement.offsetTop}px;` +
                    `left: ${
                        this.tooltipPositionElement.offsetLeft - (
                            this.tooltipPositionElement.closest('.snap') &&
                            this.tooltipPositionElement.closest('.snap').scrollLeft ||
                            0
                        )
                    }px;` : ''
            },
            getTooltipLabel() {
                return this.getSwatchConfig(this.activeTooltipItem.attribute, this.activeTooltipItem.item).label
            },
            focusedLabel: false,
            focusLabel(optionId) {
                this.focusedLabel = optionId;
            },
            blurLabel() {
                this.focusedLabel = false;
            },
            showSwatches: false,
            initShowSwatchesIntersect() {
                if ('IntersectionObserver' in window && !window.scrollY) {
                    let io = new IntersectionObserver(
                        entries => {
                            entries.map(entry => {
                                if (entry.isIntersecting) {
                                    this.showSwatches = true;
                                    io.unobserve(this.$root);
                                }
                            })
                        }
                    );
                    io.observe(this.$root);
                } else {
                    this.showSwatches = true
                }
            }
        }
    }

{"messages":[],"customer":[],"compare-products":[],"last-ordered-items":[],"cart":[],"directory-data":{"AD":{"name":"Andorra"},"AE":{"name":"United Arab Emirates"},"AF":{"name":"Afghanistan"},"AG":{"name":"Antigua and Barbuda"},"AI":{"name":"Anguilla"},"AL":{"name":"Albania","regions":{"512":{"code":"AL-01","name":"Berat"},"513":{"code":"AL-09","name":"Dib\u00ebr"},"514":{"code":"AL-02","name":"Durr\u00ebs"},"515":{"code":"AL-03","name":"Elbasan"},"516":{"code":"AL-04","name":"Fier"},"517":{"code":"AL-05","name":"Gjirokast\u00ebr"},"518":{"code":"AL-06","name":"Kor\u00e7\u00eb"},"519":{"code":"AL-07","name":"Kuk\u00ebs"},"520":{"code":"AL-08","name":"Lezh\u00eb"},"521":{"code":"AL-10","name":"Shkod\u00ebr"},"522":{"code":"AL-11","name":"Tiran\u00eb"},"523":{"code":"AL-12","name":"Vlor\u00eb"}}},"AM":{"name":"Armenia"},"AO":{"name":"Angola"},"AQ":{"name":"Antarctica"},"AR":{"name":"Argentina","regions":{"525":{"code":"AR-B","name":"Buenos Aires"},"526":{"code":"AR-K","name":"Catamarca"},"527":{"code":"AR-H","name":"Chaco"},"528":{"code":"AR-U","name":"Chubut"},"524":{"code":"AR-C","name":"Ciudad Aut\u00f3noma de Buenos Aires"},"529":{"code":"AR-X","name":"C\u00f3rdoba"},"530":{"code":"AR-W","name":"Corrientes"},"531":{"code":"AR-E","name":"Entre R\u00edos"},"532":{"code":"AR-P","name":"Formosa"},"533":{"code":"AR-Y","name":"Jujuy"},"534":{"code":"AR-L","name":"La Pampa"},"535":{"code":"AR-F","name":"La Rioja"},"536":{"code":"AR-M","name":"Mendoza"},"537":{"code":"AR-N","name":"Misiones"},"538":{"code":"AR-Q","name":"Neuqu\u00e9n"},"539":{"code":"AR-R","name":"R\u00edo Negro"},"540":{"code":"AR-A","name":"Salta"},"541":{"code":"AR-J","name":"San Juan"},"542":{"code":"AR-D","name":"San Luis"},"543":{"code":"AR-Z","name":"Santa Cruz"},"544":{"code":"AR-S","name":"Santa Fe"},"545":{"code":"AR-G","name":"Santiago del Estero"},"546":{"code":"AR-V","name":"Tierra del Fuego"},"547":{"code":"AR-T","name":"Tucum\u00e1n"}}},"AS":{"name":"American Samoa"},"AT":{"name":"Austria","regions":{"102":{"code":"BL","name":"Burgenland"},"99":{"code":"KN","name":"K\u00e4rnten"},"96":{"code":"NO","name":"Nieder\u00f6sterreich"},"97":{"code":"OO","name":"Ober\u00f6sterreich"},"98":{"code":"SB","name":"Salzburg"},"100":{"code":"ST","name":"Steiermark"},"101":{"code":"TI","name":"Tirol"},"103":{"code":"VB","name":"Vorarlberg"},"95":{"code":"WI","name":"Wien"}}},"AU":{"name":"Australia","regions":{"605":{"code":"ACT","name":"Australian Capital Territory"},"606":{"code":"NSW","name":"New South Wales"},"612":{"code":"NT","name":"Northern Territory"},"608":{"code":"QLD","name":"Queensland"},"609":{"code":"SA","name":"South Australia"},"610":{"code":"TAS","name":"Tasmania"},"607":{"code":"VIC","name":"Victoria"},"611":{"code":"WA","name":"Western Australia"}}},"AW":{"name":"Aruba"},"AX":{"name":"\u00c5land Islands"},"AZ":{"name":"Azerbaijan"},"BA":{"name":"Bosnia and Herzegovina"},"BB":{"name":"Barbados"},"BD":{"name":"Bangladesh"},"BE":{"name":"Belgium","regions":{"620":{"code":"VAN","name":"Antwerpen"},"621":{"code":"WBR","name":"Brabant wallon"},"622":{"code":"BRU","name":"Brussels-Capital Region"},"623":{"code":"WHT","name":"Hainaut"},"625":{"code":"WLG","name":"Li\u00e8ge"},"624":{"code":"VLI","name":"Limburg"},"626":{"code":"WLX","name":"Luxembourg"},"627":{"code":"WNA","name":"Namur"},"628":{"code":"VOV","name":"Oost-Vlaanderen"},"629":{"code":"VBR","name":"Vlaams-Brabant"},"630":{"code":"VWV","name":"West-Vlaanderen"}}},"BF":{"name":"Burkina Faso"},"BG":{"name":"Bulgaria","regions":{"640":{"code":"BG-01","name":"Blagoevgrad"},"641":{"code":"BG-02","name":"Burgas"},"647":{"code":"BG-08","name":"Dobrich"},"646":{"code":"BG-07","name":"Gabrovo"},"665":{"code":"BG-26","name":"Haskovo"},"648":{"code":"BG-09","name":"Kardzhali"},"649":{"code":"BG-10","name":"Kyustendil"},"650":{"code":"BG-11","name":"Lovech"},"651":{"code":"BG-12","name":"Montana"},"652":{"code":"BG-13","name":"Pazardzhik"},"653":{"code":"BG-14","name":"Pernik"},"654":{"code":"BG-15","name":"Pleven"},"655":{"code":"BG-16","name":"Plovdiv"},"656":{"code":"BG-17","name":"Razgrad"},"657":{"code":"BG-18","name":"Ruse"},"666":{"code":"BG-27","name":"Shumen"},"658":{"code":"BG-19","name":"Silistra"},"659":{"code":"BG-20","name":"Sliven"},"660":{"code":"BG-21","name":"Smolyan"},"661":{"code":"BG-22","name":"Sofia City"},"662":{"code":"BG-23","name":"Sofia Province"},"663":{"code":"BG-24","name":"Stara Zagora"},"664":{"code":"BG-25","name":"Targovishte"},"642":{"code":"BG-03","name":"Varna"},"643":{"code":"BG-04","name":"Veliko Tarnovo"},"644":{"code":"BG-05","name":"Vidin"},"645":{"code":"BG-06","name":"Vratsa"},"667":{"code":"BG-28","name":"Yambol"}}},"BH":{"name":"Bahrain"},"BI":{"name":"Burundi"},"BJ":{"name":"Benin"},"BL":{"name":"Saint Barth\u00e9lemy"},"BM":{"name":"Bermuda"},"BN":{"name":"Brunei Darussalam"},"BO":{"name":"Bolivia","regions":{"632":{"code":"BO-H","name":"Chuquisaca"},"631":{"code":"BO-C","name":"Cochabamba"},"633":{"code":"BO-B","name":"El Beni"},"634":{"code":"BO-L","name":"La Paz"},"635":{"code":"BO-O","name":"Oruro"},"636":{"code":"BO-N","name":"Pando"},"637":{"code":"BO-P","name":"Potos\u00ed"},"638":{"code":"BO-S","name":"Santa Cruz"},"639":{"code":"BO-T","name":"Tarija"}}},"BQ":{"name":"Bonaire, Sint Eustatius and Saba"},"BR":{"name":"Brazil","regions":{"485":{"code":"AC","name":"Acre"},"486":{"code":"AL","name":"Alagoas"},"487":{"code":"AP","name":"Amap\u00e1"},"488":{"code":"AM","name":"Amazonas"},"489":{"code":"BA","name":"Bahia"},"490":{"code":"CE","name":"Cear\u00e1"},"511":{"code":"DF","name":"Distrito Federal"},"491":{"code":"ES","name":"Esp\u00edrito Santo"},"492":{"code":"GO","name":"Goi\u00e1s"},"493":{"code":"MA","name":"Maranh\u00e3o"},"494":{"code":"MT","name":"Mato Grosso"},"495":{"code":"MS","name":"Mato Grosso do Sul"},"496":{"code":"MG","name":"Minas Gerais"},"497":{"code":"PA","name":"Par\u00e1"},"498":{"code":"PB","name":"Para\u00edba"},"499":{"code":"PR","name":"Paran\u00e1"},"500":{"code":"PE","name":"Pernambuco"},"501":{"code":"PI","name":"Piau\u00ed"},"502":{"code":"RJ","name":"Rio de Janeiro"},"503":{"code":"RN","name":"Rio Grande do Norte"},"504":{"code":"RS","name":"Rio Grande do Sul"},"505":{"code":"RO","name":"Rond\u00f4nia"},"506":{"code":"RR","name":"Roraima"},"507":{"code":"SC","name":"Santa Catarina"},"508":{"code":"SP","name":"S\u00e3o Paulo"},"509":{"code":"SE","name":"Sergipe"},"510":{"code":"TO","name":"Tocantins"}}},"BS":{"name":"Bahamas"},"BT":{"name":"Bhutan"},"BV":{"name":"Bouvet Island"},"BW":{"name":"Botswana"},"BY":{"name":"Belarus","regions":{"613":{"code":"BY-BR","name":"Bresckaja voblas\u0107"},"614":{"code":"BY-HO","name":"Homie\u013askaja voblas\u0107"},"615":{"code":"BY-HM","name":"Horad Minsk"},"616":{"code":"BY-HR","name":"Hrodzienskaja voblas\u0107"},"617":{"code":"BY-MA","name":"Mahilio\u016dskaja voblas\u0107"},"618":{"code":"BY-MI","name":"Minskaja voblas\u0107"},"619":{"code":"BY-VI","name":"Viciebskaja voblas\u0107"}}},"BZ":{"name":"Belize"},"CA":{"name":"Canada","regions":{"66":{"code":"AB","name":"Alberta"},"67":{"code":"BC","name":"British Columbia"},"68":{"code":"MB","name":"Manitoba"},"70":{"code":"NB","name":"New Brunswick"},"69":{"code":"NL","name":"Newfoundland and Labrador"},"72":{"code":"NT","name":"Northwest Territories"},"71":{"code":"NS","name":"Nova Scotia"},"73":{"code":"NU","name":"Nunavut"},"74":{"code":"ON","name":"Ontario"},"75":{"code":"PE","name":"Prince Edward Island"},"76":{"code":"QC","name":"Quebec"},"77":{"code":"SK","name":"Saskatchewan"},"78":{"code":"YT","name":"Yukon Territory"}}},"CC":{"name":"Cocos (Keeling) Islands"},"CD":{"name":"Congo, Democratic Republic of the"},"CF":{"name":"Central African Republic"},"CG":{"name":"Congo"},"CH":{"name":"Switzerland","regions":{"104":{"code":"AG","name":"Aargau"},"106":{"code":"AR","name":"Appenzell Ausserrhoden"},"105":{"code":"AI","name":"Appenzell Innerrhoden"},"108":{"code":"BL","name":"Basel-Landschaft"},"109":{"code":"BS","name":"Basel-Stadt"},"107":{"code":"BE","name":"Bern"},"110":{"code":"FR","name":"Friburg"},"111":{"code":"GE","name":"Geneva"},"112":{"code":"GL","name":"Glarus"},"113":{"code":"GR","name":"Graub\u00fcnden"},"114":{"code":"JU","name":"Jura"},"115":{"code":"LU","name":"Lucerne"},"116":{"code":"NE","name":"Neuch\u00e2tel"},"117":{"code":"NW","name":"Nidwalden"},"118":{"code":"OW","name":"Obwalden"},"120":{"code":"SH","name":"Schaffhausen"},"122":{"code":"SZ","name":"Schwyz"},"121":{"code":"SO","name":"Solothurn"},"119":{"code":"SG","name":"St. Gallen"},"123":{"code":"TG","name":"Thurgau"},"124":{"code":"TI","name":"Ticino"},"125":{"code":"UR","name":"Uri"},"126":{"code":"VD","name":"Vaud"},"127":{"code":"VS","name":"Wallis"},"128":{"code":"ZG","name":"Zug"},"129":{"code":"ZH","name":"Z\u00fcrich"}}},"CI":{"name":"C\u00f4te d'Ivoire"},"CK":{"name":"Cook Islands"},"CL":{"name":"Chile","regions":{"668":{"code":"CL-AI","name":"Ais\u00e9n del General Carlos Iba\u00f1ez del Campo"},"669":{"code":"CL-AN","name":"Antofagasta"},"670":{"code":"CL-AP","name":"Arica y Parinacota"},"672":{"code":"CL-AT","name":"Atacama"},"673":{"code":"CL-BI","name":"Biob\u00edo"},"674":{"code":"CL-CO","name":"Coquimbo"},"671":{"code":"CL-AR","name":"La Araucan\u00eda"},"675":{"code":"CL-LI","name":"Libertador General Bernardo O'Higgins"},"676":{"code":"CL-LL","name":"Los Lagos"},"677":{"code":"CL-LR","name":"Los R\u00edos"},"678":{"code":"CL-MA","name":"Magallanes"},"679":{"code":"CL-ML","name":"Maule"},"680":{"code":"CL-NB","name":"\u00d1uble"},"681":{"code":"CL-RM","name":"Regi\u00f3n Metropolitana de Santiago"},"682":{"code":"CL-TA","name":"Tarapac\u00e1"},"683":{"code":"CL-VS","name":"Valpara\u00edso"}}},"CM":{"name":"Cameroon"},"CN":{"name":"China","regions":{"684":{"code":"CN-AH","name":"Anhui Sheng"},"685":{"code":"CN-BJ","name":"Beijing Shi"},"686":{"code":"CN-CQ","name":"Chongqing Shi"},"687":{"code":"CN-FJ","name":"Fujian Sheng"},"688":{"code":"CN-GS","name":"Gansu Sheng"},"689":{"code":"CN-GD","name":"Guangdong Sheng"},"690":{"code":"CN-GX","name":"Guangxi Zhuangzu Zizhiqu"},"691":{"code":"CN-GZ","name":"Guizhou Sheng"},"692":{"code":"CN-HI","name":"Hainan Sheng"},"693":{"code":"CN-HE","name":"Hebei Sheng"},"694":{"code":"CN-HL","name":"Heilongjiang Sheng"},"695":{"code":"CN-HA","name":"Henan Sheng"},"696":{"code":"CN-HK","name":"Hong Kong SAR"},"697":{"code":"CN-HB","name":"Hubei Sheng"},"698":{"code":"CN-HN","name":"Hunan Sheng"},"699":{"code":"CN-JS","name":"Jiangsu Sheng"},"700":{"code":"CN-JX","name":"Jiangxi Sheng"},"701":{"code":"CN-JL","name":"Jilin Sheng"},"702":{"code":"CN-LN","name":"Liaoning Sheng"},"703":{"code":"CN-MO","name":"Macao SAR"},"704":{"code":"CN-NM","name":"Nei Mongol Zizhiqu"},"705":{"code":"CN-NX","name":"Ningxia Huizi Zizhiqu"},"706":{"code":"CN-QH","name":"Qinghai Sheng"},"707":{"code":"CN-SN","name":"Shaanxi Sheng"},"708":{"code":"CN-SD","name":"Shandong Sheng"},"709":{"code":"CN-SH","name":"Shanghai Shi"},"710":{"code":"CN-SX","name":"Shanxi Sheng"},"711":{"code":"CN-SC","name":"Sichuan Sheng"},"712":{"code":"CN-TW","name":"Taiwan Sheng"},"713":{"code":"CN-TJ","name":"Tianjin Shi"},"714":{"code":"CN-XJ","name":"Xinjiang Uygur Zizhiqu"},"715":{"code":"CN-XZ","name":"Xizang Zizhiqu"},"716":{"code":"CN-YN","name":"Yunnan Sheng"},"717":{"code":"CN-ZJ","name":"Zhejiang Sheng"}}},"CO":{"name":"Colombia","regions":{"718":{"code":"CO-AMA","name":"Amazonas"},"719":{"code":"CO-ANT","name":"Antioquia"},"720":{"code":"CO-ARA","name":"Arauca"},"721":{"code":"CO-ATL","name":"Atl\u00e1ntico"},"722":{"code":"CO-BOL","name":"Bol\u00edvar"},"723":{"code":"CO-BOY","name":"Boyac\u00e1"},"724":{"code":"CO-CAL","name":"Caldas"},"725":{"code":"CO-CAQ","name":"Caquet\u00e1"},"726":{"code":"CO-CAS","name":"Casanare"},"727":{"code":"CO-CAU","name":"Cauca"},"728":{"code":"CO-CES","name":"Cesar"},"729":{"code":"CO-CHO","name":"Choc\u00f3"},"730":{"code":"CO-COR","name":"C\u00f3rdoba"},"731":{"code":"CO-CUN","name":"Cundinamarca"},"732":{"code":"CO-GUA","name":"Guain\u00eda"},"733":{"code":"CO-GUV","name":"Guaviare"},"734":{"code":"CO-HUL","name":"Huila"},"735":{"code":"CO-LAG","name":"La Guajira"},"736":{"code":"CO-MAG","name":"Magdalena"},"737":{"code":"CO-MET","name":"Meta"},"738":{"code":"CO-NAR","name":"Nari\u00f1o"},"739":{"code":"CO-NSA","name":"Norte de Santander"},"740":{"code":"CO-PUT","name":"Putumayo"},"741":{"code":"CO-QUI","name":"Quind\u00edo"},"742":{"code":"CO-RIS","name":"Risaralda"},"743":{"code":"CO-SAP","name":"San Andr\u00e9s y Providencia"},"744":{"code":"CO-SAN","name":"Santander"},"745":{"code":"CO-SUC","name":"Sucre"},"746":{"code":"CO-TOL","name":"Tolima"},"747":{"code":"CO-VAC","name":"Valle del Cauca"},"748":{"code":"CO-VAU","name":"Vaup\u00e9s"},"749":{"code":"CO-VID","name":"Vichada"}}},"CR":{"name":"Costa Rica"},"CU":{"name":"Cuba"},"CV":{"name":"Cabo Verde"},"CW":{"name":"Cura\u00e7ao"},"CX":{"name":"Christmas Island"},"CY":{"name":"Cyprus"},"CZ":{"name":"Czech Republic","regions":{"752":{"code":"CZ-31","name":"Jiho\u010desk\u00fd kraj"},"760":{"code":"CZ-64","name":"Jihomoravsk\u00fd kraj"},"754":{"code":"CZ-41","name":"Karlovarsk\u00fd kraj"},"759":{"code":"CZ-63","name":"Kraj Vyso\u010dina"},"757":{"code":"CZ-52","name":"Kr\u00e1lov\u00e9hradeck\u00fd kraj"},"756":{"code":"CZ-51","name":"Libereck\u00fd kraj"},"763":{"code":"CZ-80","name":"Moravskoslezsk\u00fd kraj"},"761":{"code":"CZ-71","name":"Olomouck\u00fd kraj"},"758":{"code":"CZ-53","name":"Pardubick\u00fd kraj"},"753":{"code":"CZ-32","name":"Plze\u0148sk\u00fd kraj"},"750":{"code":"CZ-10","name":"Praha, Hlavn\u00ed m\u011bsto"},"751":{"code":"CZ-20","name":"St\u0159edo\u010desk\u00fd kraj"},"755":{"code":"CZ-42","name":"\u00dasteck\u00fd kraj"},"762":{"code":"CZ-72","name":"Zl\u00ednsk\u00fd kraj"}}},"DE":{"name":"Germany","regions":{"80":{"code":"BAW","name":"Baden-W\u00fcrttemberg"},"81":{"code":"BAY","name":"Bayern"},"82":{"code":"BER","name":"Berlin"},"83":{"code":"BRG","name":"Brandenburg"},"84":{"code":"BRE","name":"Bremen"},"85":{"code":"HAM","name":"Hamburg"},"86":{"code":"HES","name":"Hessen"},"87":{"code":"MEC","name":"Mecklenburg-Vorpommern"},"79":{"code":"NDS","name":"Niedersachsen"},"88":{"code":"NRW","name":"Nordrhein-Westfalen"},"89":{"code":"RHE","name":"Rheinland-Pfalz"},"90":{"code":"SAR","name":"Saarland"},"91":{"code":"SAS","name":"Sachsen"},"92":{"code":"SAC","name":"Sachsen-Anhalt"},"93":{"code":"SCN","name":"Schleswig-Holstein"},"94":{"code":"THE","name":"Th\u00fcringen"}}},"DJ":{"name":"Djibouti"},"DK":{"name":"Denmark","regions":{"764":{"code":"DK-84","name":"Hovedstaden"},"765":{"code":"DK-82","name":"Midtjylland"},"766":{"code":"DK-81","name":"Nordjylland"},"767":{"code":"DK-85","name":"Sj\u00e6lland"},"768":{"code":"DK-83","name":"Syddanmark"}}},"DM":{"name":"Dominica"},"DO":{"name":"Dominican Republic"},"DZ":{"name":"Algeria"},"EC":{"name":"Ecuador","regions":{"769":{"code":"EC-A","name":"Azuay"},"770":{"code":"EC-B","name":"Bol\u00edvar"},"771":{"code":"EC-F","name":"Ca\u00f1ar"},"772":{"code":"EC-C","name":"Carchi"},"773":{"code":"EC-H","name":"Chimborazo"},"774":{"code":"EC-X","name":"Cotopaxi"},"775":{"code":"EC-O","name":"El Oro"},"776":{"code":"EC-E","name":"Esmeraldas"},"777":{"code":"EC-W","name":"Gal\u00e1pagos"},"778":{"code":"EC-G","name":"Guayas"},"779":{"code":"EC-I","name":"Imbabura"},"780":{"code":"EC-L","name":"Loja"},"781":{"code":"EC-R","name":"Los R\u00edos"},"782":{"code":"EC-M","name":"Manab\u00ed"},"783":{"code":"EC-S","name":"Morona Santiago"},"784":{"code":"EC-N","name":"Napo"},"785":{"code":"EC-D","name":"Orellana"},"786":{"code":"EC-Y","name":"Pastaza"},"787":{"code":"EC-P","name":"Pichincha"},"788":{"code":"EC-SE","name":"Santa Elena"},"789":{"code":"EC-SD","name":"Santo Domingo de los Ts\u00e1chilas"},"790":{"code":"EC-U","name":"Sucumb\u00edos"},"791":{"code":"EC-T","name":"Tungurahua"},"792":{"code":"EC-Z","name":"Zamora Chinchipe"}}},"EE":{"name":"Estonia","regions":{"340":{"code":"EE-37","name":"Harjumaa"},"341":{"code":"EE-39","name":"Hiiumaa"},"342":{"code":"EE-44","name":"Ida-Virumaa"},"344":{"code":"EE-51","name":"J\u00e4rvamaa"},"343":{"code":"EE-49","name":"J\u00f5gevamaa"},"346":{"code":"EE-59","name":"L\u00e4\u00e4ne-Virumaa"},"345":{"code":"EE-57","name":"L\u00e4\u00e4nemaa"},"348":{"code":"EE-67","name":"P\u00e4rnumaa"},"347":{"code":"EE-65","name":"P\u00f5lvamaa"},"349":{"code":"EE-70","name":"Raplamaa"},"350":{"code":"EE-74","name":"Saaremaa"},"351":{"code":"EE-78","name":"Tartumaa"},"352":{"code":"EE-82","name":"Valgamaa"},"353":{"code":"EE-84","name":"Viljandimaa"},"354":{"code":"EE-86","name":"V\u00f5rumaa"}}},"EG":{"name":"Egypt"},"EH":{"name":"Western Sahara"},"ER":{"name":"Eritrea"},"ES":{"name":"Spain","regions":{"130":{"code":"A Coru\u0441a","name":"A Coru\u00f1a"},"131":{"code":"Alava","name":"Alava"},"132":{"code":"Albacete","name":"Albacete"},"133":{"code":"Alicante","name":"Alicante"},"134":{"code":"Almeria","name":"Almeria"},"135":{"code":"Asturias","name":"Asturias"},"136":{"code":"Avila","name":"Avila"},"137":{"code":"Badajoz","name":"Badajoz"},"138":{"code":"Baleares","name":"Baleares"},"139":{"code":"Barcelona","name":"Barcelona"},"140":{"code":"Burgos","name":"Burgos"},"141":{"code":"Caceres","name":"Caceres"},"142":{"code":"Cadiz","name":"Cadiz"},"143":{"code":"Cantabria","name":"Cantabria"},"144":{"code":"Castellon","name":"Castellon"},"145":{"code":"Ceuta","name":"Ceuta"},"146":{"code":"Ciudad Real","name":"Ciudad Real"},"147":{"code":"Cordoba","name":"Cordoba"},"148":{"code":"Cuenca","name":"Cuenca"},"149":{"code":"Girona","name":"Girona"},"150":{"code":"Granada","name":"Granada"},"151":{"code":"Guadalajara","name":"Guadalajara"},"152":{"code":"Guipuzcoa","name":"Guipuzcoa"},"153":{"code":"Huelva","name":"Huelva"},"154":{"code":"Huesca","name":"Huesca"},"155":{"code":"Jaen","name":"Jaen"},"156":{"code":"La Rioja","name":"La Rioja"},"157":{"code":"Las Palmas","name":"Las Palmas"},"158":{"code":"Leon","name":"Leon"},"159":{"code":"Lleida","name":"Lleida"},"160":{"code":"Lugo","name":"Lugo"},"161":{"code":"Madrid","name":"Madrid"},"162":{"code":"Malaga","name":"Malaga"},"163":{"code":"Melilla","name":"Melilla"},"164":{"code":"Murcia","name":"Murcia"},"165":{"code":"Navarra","name":"Navarra"},"166":{"code":"Ourense","name":"Ourense"},"167":{"code":"Palencia","name":"Palencia"},"168":{"code":"Pontevedra","name":"Pontevedra"},"169":{"code":"Salamanca","name":"Salamanca"},"170":{"code":"Santa Cruz de Tenerife","name":"Santa Cruz de Tenerife"},"171":{"code":"Segovia","name":"Segovia"},"172":{"code":"Sevilla","name":"Sevilla"},"173":{"code":"Soria","name":"Soria"},"174":{"code":"Tarragona","name":"Tarragona"},"175":{"code":"Teruel","name":"Teruel"},"176":{"code":"Toledo","name":"Toledo"},"177":{"code":"Valencia","name":"Valencia"},"178":{"code":"Valladolid","name":"Valladolid"},"179":{"code":"Vizcaya","name":"Vizcaya"},"180":{"code":"Zamora","name":"Zamora"},"181":{"code":"Zaragoza","name":"Zaragoza"}}},"ET":{"name":"Ethiopia"},"FI":{"name":"Finland","regions":{"339":{"code":"Ahvenanmaa","name":"Ahvenanmaa"},"333":{"code":"Etel\u00e4-Karjala","name":"Etel\u00e4-Karjala"},"326":{"code":"Etel\u00e4-Pohjanmaa","name":"Etel\u00e4-Pohjanmaa"},"325":{"code":"Etel\u00e4-Savo","name":"Etel\u00e4-Savo"},"337":{"code":"It\u00e4-Uusimaa","name":"It\u00e4-Uusimaa"},"322":{"code":"Kainuu","name":"Kainuu"},"335":{"code":"Kanta-H\u00e4me","name":"Kanta-H\u00e4me"},"330":{"code":"Keski-Pohjanmaa","name":"Keski-Pohjanmaa"},"331":{"code":"Keski-Suomi","name":"Keski-Suomi"},"338":{"code":"Kymenlaakso","name":"Kymenlaakso"},"320":{"code":"Lappi","name":"Lappi"},"334":{"code":"P\u00e4ij\u00e4t-H\u00e4me","name":"P\u00e4ij\u00e4t-H\u00e4me"},"328":{"code":"Pirkanmaa","name":"Pirkanmaa"},"327":{"code":"Pohjanmaa","name":"Pohjanmaa"},"323":{"code":"Pohjois-Karjala","name":"Pohjois-Karjala"},"321":{"code":"Pohjois-Pohjanmaa","name":"Pohjois-Pohjanmaa"},"324":{"code":"Pohjois-Savo","name":"Pohjois-Savo"},"329":{"code":"Satakunta","name":"Satakunta"},"336":{"code":"Uusimaa","name":"Uusimaa"},"332":{"code":"Varsinais-Suomi","name":"Varsinais-Suomi"}}},"FJ":{"name":"Fiji"},"FK":{"name":"Falkland Islands"},"FM":{"name":"Micronesia"},"FO":{"name":"Faroe Islands"},"FR":{"name":"France","regions":{"182":{"code":"1","name":"Ain"},"183":{"code":"2","name":"Aisne"},"184":{"code":"3","name":"Allier"},"185":{"code":"4","name":"Alpes-de-Haute-Provence"},"187":{"code":"6","name":"Alpes-Maritimes"},"188":{"code":"7","name":"Ard\u00e8che"},"189":{"code":"8","name":"Ardennes"},"190":{"code":"9","name":"Ari\u00e8ge"},"191":{"code":"10","name":"Aube"},"192":{"code":"11","name":"Aude"},"193":{"code":"12","name":"Aveyron"},"249":{"code":"67","name":"Bas-Rhin"},"194":{"code":"13","name":"Bouches-du-Rh\u00f4ne"},"195":{"code":"14","name":"Calvados"},"196":{"code":"15","name":"Cantal"},"197":{"code":"16","name":"Charente"},"198":{"code":"17","name":"Charente-Maritime"},"199":{"code":"18","name":"Cher"},"200":{"code":"19","name":"Corr\u00e8ze"},"201":{"code":"2A","name":"Corse-du-Sud"},"203":{"code":"21","name":"C\u00f4te-d'Or"},"204":{"code":"22","name":"C\u00f4tes-d'Armor"},"205":{"code":"23","name":"Creuse"},"261":{"code":"79","name":"Deux-S\u00e8vres"},"206":{"code":"24","name":"Dordogne"},"207":{"code":"25","name":"Doubs"},"208":{"code":"26","name":"Dr\u00f4me"},"273":{"code":"91","name":"Essonne"},"209":{"code":"27","name":"Eure"},"210":{"code":"28","name":"Eure-et-Loir"},"211":{"code":"29","name":"Finist\u00e8re"},"212":{"code":"30","name":"Gard"},"214":{"code":"32","name":"Gers"},"215":{"code":"33","name":"Gironde"},"250":{"code":"68","name":"Haut-Rhin"},"202":{"code":"2B","name":"Haute-Corse"},"213":{"code":"31","name":"Haute-Garonne"},"225":{"code":"43","name":"Haute-Loire"},"234":{"code":"52","name":"Haute-Marne"},"252":{"code":"70","name":"Haute-Sa\u00f4ne"},"256":{"code":"74","name":"Haute-Savoie"},"269":{"code":"87","name":"Haute-Vienne"},"186":{"code":"5","name":"Hautes-Alpes"},"247":{"code":"65","name":"Hautes-Pyr\u00e9n\u00e9es"},"274":{"code":"92","name":"Hauts-de-Seine"},"216":{"code":"34","name":"H\u00e9rault"},"217":{"code":"35","name":"Ille-et-Vilaine"},"218":{"code":"36","name":"Indre"},"219":{"code":"37","name":"Indre-et-Loire"},"220":{"code":"38","name":"Is\u00e8re"},"221":{"code":"39","name":"Jura"},"222":{"code":"40","name":"Landes"},"223":{"code":"41","name":"Loir-et-Cher"},"224":{"code":"42","name":"Loire"},"226":{"code":"44","name":"Loire-Atlantique"},"227":{"code":"45","name":"Loiret"},"228":{"code":"46","name":"Lot"},"229":{"code":"47","name":"Lot-et-Garonne"},"230":{"code":"48","name":"Loz\u00e8re"},"231":{"code":"49","name":"Maine-et-Loire"},"232":{"code":"50","name":"Manche"},"233":{"code":"51","name":"Marne"},"235":{"code":"53","name":"Mayenne"},"236":{"code":"54","name":"Meurthe-et-Moselle"},"237":{"code":"55","name":"Meuse"},"238":{"code":"56","name":"Morbihan"},"239":{"code":"57","name":"Moselle"},"240":{"code":"58","name":"Ni\u00e8vre"},"241":{"code":"59","name":"Nord"},"242":{"code":"60","name":"Oise"},"243":{"code":"61","name":"Orne"},"257":{"code":"75","name":"Paris"},"244":{"code":"62","name":"Pas-de-Calais"},"245":{"code":"63","name":"Puy-de-D\u00f4me"},"246":{"code":"64","name":"Pyr\u00e9n\u00e9es-Atlantiques"},"248":{"code":"66","name":"Pyr\u00e9n\u00e9es-Orientales"},"251":{"code":"69","name":"Rh\u00f4ne"},"253":{"code":"71","name":"Sa\u00f4ne-et-Loire"},"254":{"code":"72","name":"Sarthe"},"255":{"code":"73","name":"Savoie"},"259":{"code":"77","name":"Seine-et-Marne"},"258":{"code":"76","name":"Seine-Maritime"},"275":{"code":"93","name":"Seine-Saint-Denis"},"262":{"code":"80","name":"Somme"},"263":{"code":"81","name":"Tarn"},"264":{"code":"82","name":"Tarn-et-Garonne"},"272":{"code":"90","name":"Territoire-de-Belfort"},"277":{"code":"95","name":"Val-d'Oise"},"276":{"code":"94","name":"Val-de-Marne"},"265":{"code":"83","name":"Var"},"266":{"code":"84","name":"Vaucluse"},"267":{"code":"85","name":"Vend\u00e9e"},"268":{"code":"86","name":"Vienne"},"270":{"code":"88","name":"Vosges"},"271":{"code":"89","name":"Yonne"},"260":{"code":"78","name":"Yvelines"}}},"GA":{"name":"Gabon"},"GB":{"name":"United Kingdom "},"GD":{"name":"Grenada"},"GE":{"name":"Georgia"},"GF":{"name":"French Guiana"},"GG":{"name":"Guernsey"},"GH":{"name":"Ghana"},"GI":{"name":"Gibraltar"},"GL":{"name":"Greenland"},"GM":{"name":"Gambia"},"GN":{"name":"Guinea"},"GP":{"name":"Guadeloupe"},"GQ":{"name":"Equatorial Guinea"},"GR":{"name":"Greece","regions":{"806":{"code":"GR-69","name":"\u00c1gion \u00d3ros"},"793":{"code":"GR-A","name":"Anatolik\u00ed Makedon\u00eda kai Thr\u00e1ki"},"794":{"code":"GR-I","name":"Attik\u00ed"},"795":{"code":"GR-G","name":"Dytik\u00ed Ell\u00e1da"},"796":{"code":"GR-C","name":"Dytik\u00ed Makedon\u00eda"},"797":{"code":"GR-F","name":"Ion\u00eda N\u00edsia"},"798":{"code":"GR-D","name":"\u00cdpeiros"},"799":{"code":"GR-B","name":"Kentrik\u00ed Makedon\u00eda"},"800":{"code":"GR-M","name":"Kr\u00edti"},"801":{"code":"GR-L","name":"N\u00f3tio Aiga\u00edo"},"802":{"code":"GR-J","name":"Pelop\u00f3nnisos"},"803":{"code":"GR-H","name":"Stere\u00e1 Ell\u00e1da"},"804":{"code":"GR-E","name":"Thessal\u00eda"},"805":{"code":"GR-K","name":"V\u00f3reio Aiga\u00edo"}}},"GS":{"name":"South Georgia and the South Sandwich Islands"},"GT":{"name":"Guatemala"},"GU":{"name":"Guam"},"GW":{"name":"Guinea-Bissau"},"GY":{"name":"Guyana","regions":{"807":{"code":"GY-BA","name":"Barima-Waini"},"808":{"code":"GY-CU","name":"Cuyuni-Mazaruni"},"809":{"code":"GY-DE","name":"Demerara-Mahaica"},"810":{"code":"GY-EB","name":"East Berbice-Corentyne"},"811":{"code":"GY-ES","name":"Essequibo Islands-West Demerara"},"812":{"code":"GY-MA","name":"Mahaica-Berbice"},"813":{"code":"GY-PM","name":"Pomeroon-Supenaam"},"814":{"code":"GY-PT","name":"Potaro-Siparuni"},"815":{"code":"GY-UD","name":"Upper Demerara-Berbice"},"816":{"code":"GY-UT","name":"Upper Takutu-Upper Essequibo"}}},"HM":{"name":"Heard Island and McDonald Islands"},"HN":{"name":"Honduras"},"HR":{"name":"Croatia","regions":{"554":{"code":"HR-07","name":"Bjelovarsko-bilogorska \u017eupanija"},"559":{"code":"HR-12","name":"Brodsko-posavska \u017eupanija"},"566":{"code":"HR-19","name":"Dubrova\u010dko-neretvanska \u017eupanija"},"568":{"code":"HR-21","name":"Grad Zagreb"},"565":{"code":"HR-18","name":"Istarska \u017eupanija"},"551":{"code":"HR-04","name":"Karlova\u010dka \u017eupanija"},"553":{"code":"HR-06","name":"Koprivni\u010dko-kri\u017eeva\u010dka \u017eupanija"},"549":{"code":"HR-02","name":"Krapinsko-zagorska \u017eupanija"},"556":{"code":"HR-09","name":"Li\u010dko-senjska \u017eupanija"},"567":{"code":"HR-20","name":"Me\u0111imurska \u017eupanija"},"561":{"code":"HR-14","name":"Osje\u010dko-baranjska \u017eupanija"},"558":{"code":"HR-11","name":"Po\u017ee\u0161ko-slavonska \u017eupanija"},"555":{"code":"HR-08","name":"Primorsko-goranska \u017eupanija"},"562":{"code":"HR-15","name":"\u0160ibensko-kninska \u017eupanija"},"550":{"code":"HR-03","name":"Sisa\u010dko-moslava\u010dka \u017eupanija"},"564":{"code":"HR-17","name":"Splitsko-dalmatinska \u017eupanija"},"552":{"code":"HR-05","name":"Vara\u017edinska \u017eupanija"},"557":{"code":"HR-10","name":"Viroviti\u010dko-podravska \u017eupanija"},"563":{"code":"HR-16","name":"Vukovarsko-srijemska \u017eupanija"},"560":{"code":"HR-13","name":"Zadarska \u017eupanija"},"548":{"code":"HR-01","name":"Zagreba\u010dka \u017eupanija"}}},"HT":{"name":"Haiti"},"HU":{"name":"Hungary"},"ID":{"name":"Indonesia"},"IE":{"name":"Ireland"},"IL":{"name":"Israel"},"IM":{"name":"Isle of Man"},"IN":{"name":"India","regions":{"569":{"code":"AN","name":"Andaman and Nicobar Islands"},"570":{"code":"AP","name":"Andhra Pradesh"},"571":{"code":"AR","name":"Arunachal Pradesh"},"572":{"code":"AS","name":"Assam"},"573":{"code":"BR","name":"Bihar"},"574":{"code":"CH","name":"Chandigarh"},"575":{"code":"CT","name":"Chhattisgarh"},"576":{"code":"DN","name":"Dadra and Nagar Haveli"},"577":{"code":"DD","name":"Daman and Diu"},"578":{"code":"DL","name":"Delhi"},"579":{"code":"GA","name":"Goa"},"580":{"code":"GJ","name":"Gujarat"},"581":{"code":"HR","name":"Haryana"},"582":{"code":"HP","name":"Himachal Pradesh"},"583":{"code":"JK","name":"Jammu and Kashmir"},"584":{"code":"JH","name":"Jharkhand"},"585":{"code":"KA","name":"Karnataka"},"586":{"code":"KL","name":"Kerala"},"587":{"code":"LD","name":"Lakshadweep"},"588":{"code":"MP","name":"Madhya Pradesh"},"589":{"code":"MH","name":"Maharashtra"},"590":{"code":"MN","name":"Manipur"},"591":{"code":"ML","name":"Meghalaya"},"592":{"code":"MZ","name":"Mizoram"},"593":{"code":"NL","name":"Nagaland"},"594":{"code":"OR","name":"Odisha"},"595":{"code":"PY","name":"Puducherry"},"596":{"code":"PB","name":"Punjab"},"597":{"code":"RJ","name":"Rajasthan"},"598":{"code":"SK","name":"Sikkim"},"599":{"code":"TN","name":"Tamil Nadu"},"600":{"code":"TG","name":"Telangana"},"601":{"code":"TR","name":"Tripura"},"602":{"code":"UP","name":"Uttar Pradesh"},"603":{"code":"UT","name":"Uttarakhand"},"604":{"code":"WB","name":"West Bengal"}}},"IO":{"name":"British Indian Ocean Territory"},"IQ":{"name":"Iraq"},"IR":{"name":"Iran"},"IS":{"name":"Iceland","regions":{"823":{"code":"IS-07","name":"Austurland"},"817":{"code":"IS-01","name":"H\u00f6fu\u00f0borgarsv\u00e6\u00f0i"},"822":{"code":"IS-06","name":"Nor\u00f0urland eystra"},"821":{"code":"IS-05","name":"Nor\u00f0urland vestra"},"824":{"code":"IS-08","name":"Su\u00f0urland"},"818":{"code":"IS-02","name":"Su\u00f0urnes"},"820":{"code":"IS-04","name":"Vestfir\u00f0ir"},"819":{"code":"IS-03","name":"Vesturland"}}},"IT":{"name":"Italy","regions":{"825":{"code":"AG","name":"Agrigento"},"826":{"code":"AL","name":"Alessandria"},"827":{"code":"AN","name":"Ancona"},"828":{"code":"AO","name":"Aosta"},"830":{"code":"AR","name":"Arezzo"},"831":{"code":"AP","name":"Ascoli-Piceno"},"832":{"code":"AT","name":"Asti"},"833":{"code":"AV","name":"Avellino"},"834":{"code":"BA","name":"Bari"},"835":{"code":"BT","name":"Barletta-Andria-Trani"},"836":{"code":"BL","name":"Belluno"},"837":{"code":"BN","name":"Benevento"},"838":{"code":"BG","name":"Bergamo"},"839":{"code":"BI","name":"Biella"},"840":{"code":"BO","name":"Bologna"},"841":{"code":"BZ","name":"Bolzano"},"842":{"code":"BS","name":"Brescia"},"843":{"code":"BR","name":"Brindisi"},"844":{"code":"CA","name":"Cagliari"},"845":{"code":"CL","name":"Caltanissetta"},"846":{"code":"CB","name":"Campobasso"},"847":{"code":"CI","name":"Carbonia Iglesias"},"848":{"code":"CE","name":"Caserta"},"849":{"code":"CT","name":"Catania"},"850":{"code":"CZ","name":"Catanzaro"},"851":{"code":"CH","name":"Chieti"},"852":{"code":"CO","name":"Como"},"853":{"code":"CS","name":"Cosenza"},"854":{"code":"CR","name":"Cremona"},"855":{"code":"KR","name":"Crotone"},"856":{"code":"CN","name":"Cuneo"},"857":{"code":"EN","name":"Enna"},"858":{"code":"FM","name":"Fermo"},"859":{"code":"FE","name":"Ferrara"},"860":{"code":"FI","name":"Firenze"},"861":{"code":"FG","name":"Foggia"},"862":{"code":"FC","name":"Forli-Cesena"},"863":{"code":"FR","name":"Frosinone"},"864":{"code":"GE","name":"Genova"},"865":{"code":"GO","name":"Gorizia"},"866":{"code":"GR","name":"Grosseto"},"867":{"code":"IM","name":"Imperia"},"868":{"code":"IS","name":"Isernia"},"829":{"code":"AQ","name":"L'Aquila"},"869":{"code":"SP","name":"La-Spezia"},"870":{"code":"LT","name":"Latina"},"871":{"code":"LE","name":"Lecce"},"872":{"code":"LC","name":"Lecco"},"873":{"code":"LI","name":"Livorno"},"874":{"code":"LO","name":"Lodi"},"875":{"code":"LU","name":"Lucca"},"876":{"code":"MC","name":"Macerata"},"877":{"code":"MN","name":"Mantova"},"878":{"code":"MS","name":"Massa-Carrara"},"879":{"code":"MT","name":"Matera"},"880":{"code":"VS","name":"Medio Campidano"},"881":{"code":"ME","name":"Messina"},"882":{"code":"MI","name":"Milano"},"883":{"code":"MO","name":"Modena"},"884":{"code":"MB","name":"Monza-Brianza"},"885":{"code":"NA","name":"Napoli"},"886":{"code":"NO","name":"Novara"},"887":{"code":"NU","name":"Nuoro"},"888":{"code":"OG","name":"Ogliastra"},"889":{"code":"OT","name":"Olbia Tempio"},"890":{"code":"OR","name":"Oristano"},"891":{"code":"PD","name":"Padova"},"892":{"code":"PA","name":"Palermo"},"893":{"code":"PR","name":"Parma"},"894":{"code":"PV","name":"Pavia"},"895":{"code":"PG","name":"Perugia"},"896":{"code":"PU","name":"Pesaro-Urbino"},"897":{"code":"PE","name":"Pescara"},"898":{"code":"PC","name":"Piacenza"},"899":{"code":"PI","name":"Pisa"},"900":{"code":"PT","name":"Pistoia"},"901":{"code":"PN","name":"Pordenone"},"902":{"code":"PZ","name":"Potenza"},"903":{"code":"PO","name":"Prato"},"904":{"code":"RG","name":"Ragusa"},"905":{"code":"RA","name":"Ravenna"},"906":{"code":"RC","name":"Reggio-Calabria"},"907":{"code":"RE","name":"Reggio-Emilia"},"908":{"code":"RI","name":"Rieti"},"909":{"code":"RN","name":"Rimini"},"910":{"code":"RM","name":"Roma"},"911":{"code":"RO","name":"Rovigo"},"912":{"code":"SA","name":"Salerno"},"913":{"code":"SS","name":"Sassari"},"914":{"code":"SV","name":"Savona"},"915":{"code":"SI","name":"Siena"},"916":{"code":"SR","name":"Siracusa"},"917":{"code":"SO","name":"Sondrio"},"918":{"code":"TA","name":"Taranto"},"919":{"code":"TE","name":"Teramo"},"920":{"code":"TR","name":"Terni"},"921":{"code":"TO","name":"Torino"},"922":{"code":"TP","name":"Trapani"},"923":{"code":"TN","name":"Trento"},"924":{"code":"TV","name":"Treviso"},"925":{"code":"TS","name":"Trieste"},"926":{"code":"UD","name":"Udine"},"927":{"code":"VA","name":"Varese"},"928":{"code":"VE","name":"Venezia"},"929":{"code":"VB","name":"Verbania"},"930":{"code":"VC","name":"Vercelli"},"931":{"code":"VR","name":"Verona"},"932":{"code":"VV","name":"Vibo-Valentia"},"933":{"code":"VI","name":"Vicenza"},"934":{"code":"VT","name":"Viterbo"}}},"JE":{"name":"Jersey"},"JM":{"name":"Jamaica"},"JO":{"name":"Jordan"},"JP":{"name":"Japan"},"KE":{"name":"Kenya"},"KG":{"name":"Kyrgyzstan"},"KH":{"name":"Cambodia"},"KI":{"name":"Kiribati"},"KM":{"name":"Comoros"},"KN":{"name":"Saint Kitts and Nevis"},"KP":{"name":"Korea, Democratic People's Republic of"},"KR":{"name":"Korea, Republic of"},"KW":{"name":"Kuwait"},"KY":{"name":"Cayman Islands"},"KZ":{"name":"Kazakhstan"},"LA":{"name":"Lao People's Democratic Republic"},"LB":{"name":"Lebanon"},"LC":{"name":"Saint Lucia"},"LI":{"name":"Liechtenstein"},"LK":{"name":"Sri Lanka"},"LR":{"name":"Liberia"},"LS":{"name":"Lesotho"},"LT":{"name":"Lithuania","regions":{"475":{"code":"LT-AL","name":"Alytaus Apskritis"},"476":{"code":"LT-KU","name":"Kauno Apskritis"},"477":{"code":"LT-KL","name":"Klaip\u0117dos Apskritis"},"478":{"code":"LT-MR","name":"Marijampol\u0117s Apskritis"},"479":{"code":"LT-PN","name":"Panev\u0117\u017eio Apskritis"},"480":{"code":"LT-SA","name":"\u0160iauli\u0173 Apskritis"},"481":{"code":"LT-TA","name":"Taurag\u0117s Apskritis"},"482":{"code":"LT-TE","name":"Tel\u0161i\u0173 Apskritis"},"483":{"code":"LT-UT","name":"Utenos Apskritis"},"484":{"code":"LT-VL","name":"Vilniaus Apskritis"}}},"LU":{"name":"Luxembourg"},"LV":{"name":"Latvia","regions":{"471":{"code":"\u0100da\u017eu novads","name":"\u0100da\u017eu novads"},"366":{"code":"Aglonas novads","name":"Aglonas novads"},"367":{"code":"LV-AI","name":"Aizkraukles novads"},"368":{"code":"Aizputes novads","name":"Aizputes novads"},"369":{"code":"Akn\u012bstes novads","name":"Akn\u012bstes novads"},"370":{"code":"Alojas novads","name":"Alojas novads"},"371":{"code":"Alsungas novads","name":"Alsungas novads"},"372":{"code":"LV-AL","name":"Al\u016bksnes novads"},"373":{"code":"Amatas novads","name":"Amatas novads"},"374":{"code":"Apes novads","name":"Apes novads"},"375":{"code":"Auces novads","name":"Auces novads"},"376":{"code":"Bab\u012btes novads","name":"Bab\u012btes novads"},"377":{"code":"Baldones novads","name":"Baldones novads"},"378":{"code":"Baltinavas novads","name":"Baltinavas novads"},"379":{"code":"LV-BL","name":"Balvu novads"},"380":{"code":"LV-BU","name":"Bauskas novads"},"381":{"code":"Bever\u012bnas novads","name":"Bever\u012bnas novads"},"382":{"code":"Broc\u0113nu novads","name":"Broc\u0113nu novads"},"383":{"code":"Burtnieku novads","name":"Burtnieku novads"},"384":{"code":"Carnikavas novads","name":"Carnikavas novads"},"387":{"code":"LV-CE","name":"C\u0113su novads"},"385":{"code":"Cesvaines novads","name":"Cesvaines novads"},"386":{"code":"Ciblas novads","name":"Ciblas novads"},"388":{"code":"Dagdas novads","name":"Dagdas novads"},"355":{"code":"LV-DGV","name":"Daugavpils"},"389":{"code":"LV-DA","name":"Daugavpils novads"},"390":{"code":"LV-DO","name":"Dobeles novads"},"391":{"code":"Dundagas novads","name":"Dundagas novads"},"392":{"code":"Durbes novads","name":"Durbes novads"},"393":{"code":"Engures novads","name":"Engures novads"},"472":{"code":"\u0112rg\u013cu novads","name":"\u0112rg\u013cu novads"},"394":{"code":"Garkalnes novads","name":"Garkalnes novads"},"395":{"code":"Grobi\u0146as novads","name":"Grobi\u0146as novads"},"396":{"code":"LV-GU","name":"Gulbenes novads"},"397":{"code":"Iecavas novads","name":"Iecavas novads"},"398":{"code":"Ik\u0161\u0137iles novads","name":"Ik\u0161\u0137iles novads"},"399":{"code":"Il\u016bkstes novads","name":"Il\u016bkstes novads"},"400":{"code":"In\u010dukalna novads","name":"In\u010dukalna novads"},"401":{"code":"Jaunjelgavas novads","name":"Jaunjelgavas novads"},"402":{"code":"Jaunpiebalgas novads","name":"Jaunpiebalgas novads"},"403":{"code":"Jaunpils novads","name":"Jaunpils novads"},"357":{"code":"J\u0113kabpils","name":"J\u0113kabpils"},"405":{"code":"LV-JK","name":"J\u0113kabpils novads"},"356":{"code":"LV-JEL","name":"Jelgava"},"404":{"code":"LV-JL","name":"Jelgavas novads"},"358":{"code":"LV-JUR","name":"J\u016brmala"},"406":{"code":"Kandavas novads","name":"Kandavas novads"},"412":{"code":"K\u0101rsavas novads","name":"K\u0101rsavas novads"},"473":{"code":"\u0136eguma novads","name":"\u0136eguma novads"},"474":{"code":"\u0136ekavas novads","name":"\u0136ekavas novads"},"407":{"code":"Kokneses novads","name":"Kokneses novads"},"410":{"code":"LV-KR","name":"Kr\u0101slavas novads"},"408":{"code":"Krimuldas novads","name":"Krimuldas novads"},"409":{"code":"Krustpils novads","name":"Krustpils novads"},"411":{"code":"LV-KU","name":"Kuld\u012bgas novads"},"413":{"code":"Lielv\u0101rdes novads","name":"Lielv\u0101rdes novads"},"359":{"code":"LV-LPX","name":"Liep\u0101ja"},"360":{"code":"LV-LE","name":"Liep\u0101jas novads"},"417":{"code":"L\u012bgatnes novads","name":"L\u012bgatnes novads"},"414":{"code":"LV-LM","name":"Limba\u017eu novads"},"418":{"code":"L\u012bv\u0101nu novads","name":"L\u012bv\u0101nu novads"},"415":{"code":"Lub\u0101nas novads","name":"Lub\u0101nas novads"},"416":{"code":"LV-LU","name":"Ludzas novads"},"419":{"code":"LV-MA","name":"Madonas novads"},"421":{"code":"M\u0101lpils novads","name":"M\u0101lpils novads"},"422":{"code":"M\u0101rupes novads","name":"M\u0101rupes novads"},"420":{"code":"Mazsalacas novads","name":"Mazsalacas novads"},"423":{"code":"Nauk\u0161\u0113nu novads","name":"Nauk\u0161\u0113nu novads"},"424":{"code":"Neretas novads","name":"Neretas novads"},"425":{"code":"N\u012bcas novads","name":"N\u012bcas novads"},"426":{"code":"LV-OG","name":"Ogres novads"},"427":{"code":"Olaines novads","name":"Olaines novads"},"428":{"code":"Ozolnieku novads","name":"Ozolnieku novads"},"432":{"code":"P\u0101rgaujas novads","name":"P\u0101rgaujas novads"},"433":{"code":"P\u0101vilostas novads","name":"P\u0101vilostas novads"},"434":{"code":"P\u013cavi\u0146u novads","name":"P\u013cavi\u0146u novads"},"429":{"code":"LV-PR","name":"Prei\u013cu novads"},"430":{"code":"Priekules novads","name":"Priekules novads"},"431":{"code":"Prieku\u013cu novads","name":"Prieku\u013cu novads"},"435":{"code":"Raunas novads","name":"Raunas novads"},"361":{"code":"LV-REZ","name":"R\u0113zekne"},"442":{"code":"LV-RE","name":"R\u0113zeknes novads"},"436":{"code":"Riebi\u0146u novads","name":"Riebi\u0146u novads"},"362":{"code":"LV-RIX","name":"R\u012bga"},"363":{"code":"LV-RI","name":"R\u012bgas novads"},"437":{"code":"Rojas novads","name":"Rojas novads"},"438":{"code":"Ropa\u017eu novads","name":"Ropa\u017eu novads"},"439":{"code":"Rucavas novads","name":"Rucavas novads"},"440":{"code":"Rug\u0101ju novads","name":"Rug\u0101ju novads"},"443":{"code":"R\u016bjienas novads","name":"R\u016bjienas novads"},"441":{"code":"Rund\u0101les novads","name":"Rund\u0101les novads"},"444":{"code":"Salacgr\u012bvas novads","name":"Salacgr\u012bvas novads"},"445":{"code":"Salas novads","name":"Salas novads"},"446":{"code":"Salaspils novads","name":"Salaspils novads"},"447":{"code":"LV-SA","name":"Saldus novads"},"448":{"code":"Saulkrastu novads","name":"Saulkrastu novads"},"455":{"code":"S\u0113jas novads","name":"S\u0113jas novads"},"449":{"code":"Siguldas novads","name":"Siguldas novads"},"451":{"code":"Skr\u012bveru novads","name":"Skr\u012bveru novads"},"450":{"code":"Skrundas novads","name":"Skrundas novads"},"452":{"code":"Smiltenes novads","name":"Smiltenes novads"},"453":{"code":"Stopi\u0146u novads","name":"Stopi\u0146u novads"},"454":{"code":"Stren\u010du novads","name":"Stren\u010du novads"},"456":{"code":"LV-TA","name":"Talsu novads"},"458":{"code":"T\u0113rvetes novads","name":"T\u0113rvetes novads"},"457":{"code":"LV-TU","name":"Tukuma novads"},"459":{"code":"Vai\u0146odes novads","name":"Vai\u0146odes novads"},"460":{"code":"LV-VK","name":"Valkas novads"},"364":{"code":"Valmiera","name":"Valmiera"},"461":{"code":"LV-VM","name":"Valmieras novads"},"462":{"code":"Varak\u013c\u0101nu novads","name":"Varak\u013c\u0101nu novads"},"469":{"code":"V\u0101rkavas novads","name":"V\u0101rkavas novads"},"463":{"code":"Vecpiebalgas novads","name":"Vecpiebalgas novads"},"464":{"code":"Vecumnieku novads","name":"Vecumnieku novads"},"365":{"code":"LV-VEN","name":"Ventspils"},"465":{"code":"LV-VE","name":"Ventspils novads"},"466":{"code":"Vies\u012btes novads","name":"Vies\u012btes novads"},"467":{"code":"Vi\u013cakas novads","name":"Vi\u013cakas novads"},"468":{"code":"Vi\u013c\u0101nu novads","name":"Vi\u013c\u0101nu novads"},"470":{"code":"Zilupes novads","name":"Zilupes novads"}}},"LY":{"name":"Libya"},"MA":{"name":"Morocco"},"MC":{"name":"Monaco"},"MD":{"name":"Moldova, Republic of"},"ME":{"name":"Montenegro"},"MF":{"name":"Saint Martin"},"MG":{"name":"Madagascar"},"MH":{"name":"Marshall Islands"},"MK":{"name":"North Macedonia"},"ML":{"name":"Mali"},"MM":{"name":"Myanmar"},"MN":{"name":"Mongolia"},"MP":{"name":"Northern Mariana Islands"},"MQ":{"name":"Martinique"},"MR":{"name":"Mauritania"},"MS":{"name":"Montserrat"},"MT":{"name":"Malta"},"MU":{"name":"Mauritius"},"MV":{"name":"Maldives"},"MW":{"name":"Malawi"},"MX":{"name":"Mexico","regions":{"935":{"code":"AGU","name":"Aguascalientes"},"936":{"code":"BCN","name":"Baja California"},"937":{"code":"BCS","name":"Baja California Sur"},"938":{"code":"CAM","name":"Campeche"},"939":{"code":"CHP","name":"Chiapas"},"940":{"code":"CHH","name":"Chihuahua"},"941":{"code":"CMX","name":"Ciudad de M\u00e9xico"},"942":{"code":"COA","name":"Coahuila"},"943":{"code":"COL","name":"Colima"},"944":{"code":"DUR","name":"Durango"},"945":{"code":"MEX","name":"Estado de M\u00e9xico"},"946":{"code":"GUA","name":"Guanajuato"},"947":{"code":"GRO","name":"Guerrero"},"948":{"code":"HID","name":"Hidalgo"},"949":{"code":"JAL","name":"Jalisco"},"950":{"code":"MIC","name":"Michoac\u00e1n"},"951":{"code":"MOR","name":"Morelos"},"952":{"code":"NAY","name":"Nayarit"},"953":{"code":"NLE","name":"Nuevo Le\u00f3n"},"954":{"code":"OAX","name":"Oaxaca"},"955":{"code":"PUE","name":"Puebla"},"956":{"code":"QUE","name":"Quer\u00e9taro"},"957":{"code":"ROO","name":"Quintana Roo"},"958":{"code":"SLP","name":"San Luis Potos\u00ed"},"959":{"code":"SIN","name":"Sinaloa"},"960":{"code":"SON","name":"Sonora"},"961":{"code":"TAB","name":"Tabasco"},"962":{"code":"TAM","name":"Tamaulipas"},"963":{"code":"TLA","name":"Tlaxcala"},"964":{"code":"VER","name":"Veracruz"},"965":{"code":"YUC","name":"Yucat\u00e1n"},"966":{"code":"ZAC","name":"Zacatecas"}}},"MY":{"name":"Malaysia"},"MZ":{"name":"Mozambique"},"NA":{"name":"Namibia"},"NC":{"name":"New Caledonia"},"NE":{"name":"Niger"},"NF":{"name":"Norfolk Island"},"NG":{"name":"Nigeria"},"NI":{"name":"Nicaragua"},"NL":{"name":"Netherlands"},"NO":{"name":"Norway"},"NP":{"name":"Nepal"},"NR":{"name":"Nauru"},"NU":{"name":"Niue"},"NZ":{"name":"New Zealand"},"OM":{"name":"Oman"},"PA":{"name":"Panama"},"PE":{"name":"Peru","regions":{"986":{"code":"PE-AMA","name":"Amazonas"},"987":{"code":"PE-ANC","name":"Ancash"},"988":{"code":"PE-APU","name":"Apur\u00edmac"},"989":{"code":"PE-ARE","name":"Arequipa"},"990":{"code":"PE-AYA","name":"Ayacucho"},"991":{"code":"PE-CAJ","name":"Cajamarca"},"992":{"code":"PE-CUS","name":"Cusco"},"993":{"code":"PE-CAL","name":"El Callao"},"994":{"code":"PE-HUV","name":"Huancavelica"},"995":{"code":"PE-HUC","name":"Hu\u00e1nuco"},"996":{"code":"PE-ICA","name":"Ica"},"997":{"code":"PE-JUN","name":"Jun\u00edn"},"998":{"code":"PE-LAL","name":"La Libertad"},"999":{"code":"PE-LAM","name":"Lambayeque"},"1000":{"code":"PE-LIM","name":"Lima"},"1001":{"code":"PE-LOR","name":"Loreto"},"1002":{"code":"PE-MDD","name":"Madre de Dios"},"1003":{"code":"PE-MOQ","name":"Moquegua"},"985":{"code":"PE-LMA","name":"Municipalidad Metropolitana de Lima"},"1004":{"code":"PE-PAS","name":"Pasco"},"1005":{"code":"PE-PIU","name":"Piura"},"1006":{"code":"PE-PUN","name":"Puno"},"1007":{"code":"PE-SAM","name":"San Mart\u00edn"},"1008":{"code":"PE-TAC","name":"Tacna"},"1009":{"code":"PE-TUM","name":"Tumbes"},"1010":{"code":"PE-UCA","name":"Ucayali"}}},"PF":{"name":"French Polynesia"},"PG":{"name":"Papua New Guinea"},"PH":{"name":"Philippines"},"PK":{"name":"Pakistan"},"PL":{"name":"Poland","regions":{"1011":{"code":"PL-02","name":"dolno\u015bl\u0105skie"},"1012":{"code":"PL-04","name":"kujawsko-pomorskie"},"1013":{"code":"PL-06","name":"lubelskie"},"1014":{"code":"PL-08","name":"lubuskie"},"1017":{"code":"PL-14","name":"mazowieckie"},"1016":{"code":"PL-12","name":"ma\u0142opolskie"},"1018":{"code":"PL-16","name":"opolskie"},"1019":{"code":"PL-18","name":"podkarpackie"},"1020":{"code":"PL-20","name":"podlaskie"},"1021":{"code":"PL-22","name":"pomorskie"},"1022":{"code":"PL-24","name":"\u015bl\u0105skie"},"1023":{"code":"PL-26","name":"\u015bwi\u0119tokrzyskie"},"1024":{"code":"PL-28","name":"warmi\u0144sko-mazurskie"},"1025":{"code":"PL-30","name":"wielkopolskie"},"1026":{"code":"PL-32","name":"zachodniopomorskie"},"1015":{"code":"PL-10","name":"\u0142\u00f3dzkie"}}},"PM":{"name":"Saint Pierre and Miquelon"},"PN":{"name":"Pitcairn"},"PS":{"name":"Palestine, State of"},"PT":{"name":"Portugal","regions":{"1027":{"code":"PT-01","name":"Aveiro"},"1028":{"code":"PT-02","name":"Beja"},"1029":{"code":"PT-03","name":"Braga"},"1030":{"code":"PT-04","name":"Bragan\u00e7a"},"1031":{"code":"PT-05","name":"Castelo Branco"},"1032":{"code":"PT-06","name":"Coimbra"},"1033":{"code":"PT-07","name":"\u00c9vora"},"1034":{"code":"PT-08","name":"Faro"},"1035":{"code":"PT-09","name":"Guarda"},"1036":{"code":"PT-10","name":"Leiria"},"1037":{"code":"PT-11","name":"Lisboa"},"1038":{"code":"PT-12","name":"Portalegre"},"1039":{"code":"PT-13","name":"Porto"},"1046":{"code":"PT-30","name":"Regi\u00e3o Aut\u00f3noma da Madeira"},"1045":{"code":"PT-20","name":"Regi\u00e3o Aut\u00f3noma dos A\u00e7ores"},"1040":{"code":"PT-14","name":"Santar\u00e9m"},"1041":{"code":"PT-15","name":"Set\u00fabal"},"1042":{"code":"PT-16","name":"Viana do Castelo"},"1043":{"code":"PT-17","name":"Vila Real"},"1044":{"code":"PT-18","name":"Viseu"}}},"PW":{"name":"Palau"},"PY":{"name":"Paraguay","regions":{"968":{"code":"PY-16","name":"Alto Paraguay"},"969":{"code":"PY-10","name":"Alto Paran\u00e1"},"970":{"code":"PY-13","name":"Amambay"},"967":{"code":"PY-ASU","name":"Asunci\u00f3n"},"971":{"code":"PY-19","name":"Boquer\u00f3n"},"972":{"code":"PY-5","name":"Caaguaz\u00fa"},"973":{"code":"PY-6","name":"Caazap\u00e1"},"974":{"code":"PY-14","name":"Canindey\u00fa"},"975":{"code":"PY-11","name":"Central"},"976":{"code":"PY-1","name":"Concepci\u00f3n"},"977":{"code":"PY-3","name":"Cordillera"},"978":{"code":"PY-4","name":"Guair\u00e1"},"979":{"code":"PY-7","name":"Itap\u00faa"},"980":{"code":"PY-8","name":"Misiones"},"981":{"code":"PY-12","name":"\u00d1eembuc\u00fa"},"982":{"code":"PY-9","name":"Paraguar\u00ed"},"983":{"code":"PY-15","name":"Presidente Hayes"},"984":{"code":"PY-2","name":"San Pedro"}}},"QA":{"name":"Qatar"},"RE":{"name":"R\u00e9union"},"RO":{"name":"Romania","regions":{"278":{"code":"AB","name":"Alba"},"279":{"code":"AR","name":"Arad"},"280":{"code":"AG","name":"Arge\u015f"},"281":{"code":"BC","name":"Bac\u0103u"},"282":{"code":"BH","name":"Bihor"},"283":{"code":"BN","name":"Bistri\u0163a-N\u0103s\u0103ud"},"284":{"code":"BT","name":"Boto\u015fani"},"286":{"code":"BR","name":"Br\u0103ila"},"285":{"code":"BV","name":"Bra\u015fov"},"287":{"code":"B","name":"Bucure\u015fti"},"288":{"code":"BZ","name":"Buz\u0103u"},"290":{"code":"CL","name":"C\u0103l\u0103ra\u015fi"},"289":{"code":"CS","name":"Cara\u015f-Severin"},"291":{"code":"CJ","name":"Cluj"},"292":{"code":"CT","name":"Constan\u0163a"},"293":{"code":"CV","name":"Covasna"},"294":{"code":"DB","name":"D\u00e2mbovi\u0163a"},"295":{"code":"DJ","name":"Dolj"},"296":{"code":"GL","name":"Gala\u0163i"},"297":{"code":"GR","name":"Giurgiu"},"298":{"code":"GJ","name":"Gorj"},"299":{"code":"HR","name":"Harghita"},"300":{"code":"HD","name":"Hunedoara"},"301":{"code":"IL","name":"Ialomi\u0163a"},"302":{"code":"IS","name":"Ia\u015fi"},"303":{"code":"IF","name":"Ilfov"},"304":{"code":"MM","name":"Maramure\u015f"},"305":{"code":"MH","name":"Mehedin\u0163i"},"306":{"code":"MS","name":"Mure\u015f"},"307":{"code":"NT","name":"Neam\u0163"},"308":{"code":"OT","name":"Olt"},"309":{"code":"PH","name":"Prahova"},"311":{"code":"SJ","name":"S\u0103laj"},"310":{"code":"SM","name":"Satu-Mare"},"312":{"code":"SB","name":"Sibiu"},"313":{"code":"SV","name":"Suceava"},"314":{"code":"TR","name":"Teleorman"},"315":{"code":"TM","name":"Timi\u015f"},"316":{"code":"TL","name":"Tulcea"},"318":{"code":"VL","name":"V\u00e2lcea"},"317":{"code":"VS","name":"Vaslui"},"319":{"code":"VN","name":"Vrancea"}}},"RS":{"name":"Serbia"},"RU":{"name":"Russian Federation"},"RW":{"name":"Rwanda"},"SA":{"name":"Saudi Arabia"},"SB":{"name":"Solomon Islands"},"SC":{"name":"Seychelles"},"SD":{"name":"Sudan"},"SE":{"name":"Sweden","regions":{"1057":{"code":"SE-K","name":"Blekinge l\u00e4n"},"1058":{"code":"SE-W","name":"Dalarnas l\u00e4n"},"1060":{"code":"SE-X","name":"G\u00e4vleborgs l\u00e4n"},"1059":{"code":"SE-I","name":"Gotlands l\u00e4n"},"1061":{"code":"SE-N","name":"Hallands l\u00e4n"},"1062":{"code":"SE-Z","name":"J\u00e4mtlands l\u00e4n"},"1063":{"code":"SE-F","name":"J\u00f6nk\u00f6pings l\u00e4n"},"1064":{"code":"SE-H","name":"Kalmar l\u00e4n"},"1065":{"code":"SE-G","name":"Kronobergs l\u00e4n"},"1066":{"code":"SE-BD","name":"Norrbottens l\u00e4n"},"1076":{"code":"SE-T","name":"\u00d6rebro l\u00e4n"},"1077":{"code":"SE-E","name":"\u00d6sterg\u00f6tlands l\u00e4n"},"1067":{"code":"SE-M","name":"Sk\u00e5ne l\u00e4n"},"1069":{"code":"SE-D","name":"S\u00f6dermanlands l\u00e4n"},"1068":{"code":"SE-AB","name":"Stockholms l\u00e4n"},"1070":{"code":"SE-C","name":"Uppsala l\u00e4n"},"1071":{"code":"SE-S","name":"V\u00e4rmlands l\u00e4n"},"1072":{"code":"SE-AC","name":"V\u00e4sterbottens l\u00e4n"},"1073":{"code":"SE-Y","name":"V\u00e4sternorrlands l\u00e4n"},"1074":{"code":"SE-U","name":"V\u00e4stmanlands l\u00e4n"},"1075":{"code":"SE-O","name":"V\u00e4stra G\u00f6talands l\u00e4n"}}},"SG":{"name":"Singapore"},"SH":{"name":"Saint Helena"},"SI":{"name":"Slovenia"},"SJ":{"name":"Svalbard and Jan Mayen"},"SK":{"name":"Slovakia"},"SL":{"name":"Sierra Leone"},"SM":{"name":"San Marino"},"SN":{"name":"Senegal"},"SO":{"name":"Somalia"},"SR":{"name":"Suriname","regions":{"1047":{"code":"SR-BR","name":"Brokopondo"},"1048":{"code":"SR-CM","name":"Commewijne"},"1049":{"code":"SR-CR","name":"Coronie"},"1050":{"code":"SR-MA","name":"Marowijne"},"1051":{"code":"SR-NI","name":"Nickerie"},"1052":{"code":"SR-PR","name":"Para"},"1053":{"code":"SR-PM","name":"Paramaribo"},"1054":{"code":"SR-SA","name":"Saramacca"},"1055":{"code":"SR-SI","name":"Sipaliwini"},"1056":{"code":"SR-WA","name":"Wanica"}}},"ST":{"name":"Sao Tome and Principe"},"SV":{"name":"El Salvador"},"SX":{"name":"Sint Maarten"},"SY":{"name":"Syrian Arab Republic"},"SZ":{"name":"Eswatini"},"TC":{"name":"Turks and Caicos Islands"},"TD":{"name":"Chad"},"TF":{"name":"French Southern Territories"},"TG":{"name":"Togo"},"TH":{"name":"Thailand"},"TJ":{"name":"Tajikistan"},"TK":{"name":"Tokelau"},"TL":{"name":"Timor-Leste"},"TM":{"name":"Turkmenistan"},"TN":{"name":"Tunisia"},"TO":{"name":"Tonga"},"TR":{"name":"T\u00fcrkiye"},"TT":{"name":"Trinidad and Tobago"},"TV":{"name":"Tuvalu"},"TW":{"name":"Taiwan"},"TZ":{"name":"Tanzania"},"UA":{"name":"Ukraine"},"UG":{"name":"Uganda"},"US":{"name":"United States of America","regions":{"1":{"code":"AL","name":"Alabama"},"2":{"code":"AK","name":"Alaska"},"3":{"code":"AS","name":"American Samoa"},"4":{"code":"AZ","name":"Arizona"},"5":{"code":"AR","name":"Arkansas"},"6":{"code":"AE","name":"Armed Forces Africa"},"7":{"code":"AA","name":"Armed Forces Americas"},"8":{"code":"AE","name":"Armed Forces Canada"},"9":{"code":"AE","name":"Armed Forces Europe"},"10":{"code":"AE","name":"Armed Forces Middle East"},"11":{"code":"AP","name":"Armed Forces Pacific"},"12":{"code":"CA","name":"California"},"13":{"code":"CO","name":"Colorado"},"14":{"code":"CT","name":"Connecticut"},"15":{"code":"DE","name":"Delaware"},"16":{"code":"DC","name":"District of Columbia"},"17":{"code":"FM","name":"Federated States Of Micronesia"},"18":{"code":"FL","name":"Florida"},"19":{"code":"GA","name":"Georgia"},"20":{"code":"GU","name":"Guam"},"21":{"code":"HI","name":"Hawaii"},"22":{"code":"ID","name":"Idaho"},"23":{"code":"IL","name":"Illinois"},"24":{"code":"IN","name":"Indiana"},"25":{"code":"IA","name":"Iowa"},"26":{"code":"KS","name":"Kansas"},"27":{"code":"KY","name":"Kentucky"},"28":{"code":"LA","name":"Louisiana"},"29":{"code":"ME","name":"Maine"},"30":{"code":"MH","name":"Marshall Islands"},"31":{"code":"MD","name":"Maryland"},"32":{"code":"MA","name":"Massachusetts"},"33":{"code":"MI","name":"Michigan"},"34":{"code":"MN","name":"Minnesota"},"35":{"code":"MS","name":"Mississippi"},"36":{"code":"MO","name":"Missouri"},"37":{"code":"MT","name":"Montana"},"38":{"code":"NE","name":"Nebraska"},"39":{"code":"NV","name":"Nevada"},"40":{"code":"NH","name":"New Hampshire"},"41":{"code":"NJ","name":"New Jersey"},"42":{"code":"NM","name":"New Mexico"},"43":{"code":"NY","name":"New York"},"44":{"code":"NC","name":"North Carolina"},"45":{"code":"ND","name":"North Dakota"},"46":{"code":"MP","name":"Northern Mariana Islands"},"47":{"code":"OH","name":"Ohio"},"48":{"code":"OK","name":"Oklahoma"},"49":{"code":"OR","name":"Oregon"},"50":{"code":"PW","name":"Palau"},"51":{"code":"PA","name":"Pennsylvania"},"52":{"code":"PR","name":"Puerto Rico"},"53":{"code":"RI","name":"Rhode Island"},"54":{"code":"SC","name":"South Carolina"},"55":{"code":"SD","name":"South Dakota"},"56":{"code":"TN","name":"Tennessee"},"57":{"code":"TX","name":"Texas"},"58":{"code":"UT","name":"Utah"},"59":{"code":"VT","name":"Vermont"},"60":{"code":"VI","name":"Virgin Islands"},"61":{"code":"VA","name":"Virginia"},"62":{"code":"WA","name":"Washington"},"63":{"code":"WV","name":"West Virginia"},"64":{"code":"WI","name":"Wisconsin"},"65":{"code":"WY","name":"Wyoming"}}},"UY":{"name":"Uruguay","regions":{"1078":{"code":"UY-AR","name":"Artigas"},"1079":{"code":"UY-CA","name":"Canelones"},"1080":{"code":"UY-CL","name":"Cerro Largo"},"1081":{"code":"UY-CO","name":"Colonia"},"1082":{"code":"UY-DU","name":"Durazno"},"1083":{"code":"UY-FS","name":"Flores"},"1084":{"code":"UY-FD","name":"Florida"},"1085":{"code":"UY-LA","name":"Lavalleja"},"1086":{"code":"UY-MA","name":"Maldonado"},"1087":{"code":"UY-MO","name":"Montevideo"},"1088":{"code":"UY-PA","name":"Paysandu"},"1089":{"code":"UY-RN","name":"R\u00edo Negro"},"1090":{"code":"UY-RV","name":"Rivera"},"1091":{"code":"UY-RO","name":"Rocha"},"1092":{"code":"UY-SA","name":"Salto"},"1093":{"code":"UY-SJ","name":"San Jos\u00e9"},"1094":{"code":"UY-SO","name":"Soriano"},"1095":{"code":"UY-TA","name":"Tacuaremb\u00f3"},"1096":{"code":"UY-TT","name":"Treinta y Tres"}}},"UZ":{"name":"Uzbekistan"},"VA":{"name":"Holy See"},"VC":{"name":"Saint Vincent and the Grenadines"},"VE":{"name":"Venezuela","regions":{"1099":{"code":"VE-Z","name":"Amazonas"},"1100":{"code":"VE-B","name":"Anzo\u00e1tegui"},"1101":{"code":"VE-C","name":"Apure"},"1102":{"code":"VE-D","name":"Aragua"},"1103":{"code":"VE-E","name":"Barinas"},"1104":{"code":"VE-F","name":"Bol\u00edvar"},"1105":{"code":"VE-G","name":"Carabobo"},"1106":{"code":"VE-H","name":"Cojedes"},"1107":{"code":"VE-Y","name":"Delta Amacuro"},"1097":{"code":"VE-W","name":"Dependencias Federales"},"1098":{"code":"VE-A","name":"Distrito Capital"},"1108":{"code":"VE-I","name":"Falc\u00f3n"},"1109":{"code":"VE-J","name":"Gu\u00e1rico"},"1110":{"code":"VE-K","name":"Lara"},"1111":{"code":"VE-L","name":"M\u00e9rida"},"1112":{"code":"VE-M","name":"Miranda"},"1113":{"code":"VE-N","name":"Monagas"},"1114":{"code":"VE-O","name":"Nueva Esparta"},"1115":{"code":"VE-P","name":"Portuguesa"},"1116":{"code":"VE-R","name":"Sucre"},"1117":{"code":"VE-S","name":"T\u00e1chira"},"1118":{"code":"VE-T","name":"Trujillo"},"1119":{"code":"VE-X","name":"Vargas"},"1120":{"code":"VE-U","name":"Yaracuy"},"1121":{"code":"VE-V","name":"Zulia"}}},"VG":{"name":"Virgin Islands (British)"},"VI":{"name":"Virgin Islands (U.S.)"},"VN":{"name":"Viet Nam"},"VU":{"name":"Vanuatu"},"WF":{"name":"Wallis and Futuna"},"WS":{"name":"Samoa"},"YE":{"name":"Yemen"},"YT":{"name":"Mayotte"},"ZA":{"name":"South Africa"},"ZM":{"name":"Zambia"},"ZW":{"name":"Zimbabwe"},"data_id":1759631062},"captcha":[],"wishlist":{"items":[]},"instant-purchase":[],"loggedAsCustomer":[],"multiplewishlist":[],"persistent":[],"review":[],"customweb_external_checkout_widgets":[],"recently_viewed_product":[],"recently_compared_product":[],"product_data_storage":[],"paypal-billing-agreement":[]}
window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"NRJS-d9c81247d55ff99d156","applicationID":"1069428605","transactionName":"MQNRMBMAXRJWBUcNXQhJcgcVCFwPGAVSEFMKCVRLAgBHBFAJQR0dEA9WEw==","queueTime":0,"applicationTime":355,"atts":"HURSRlsaThw=","errorBeacon":"bam.nr-data.net","agent":""}
